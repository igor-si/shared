{"body": [{"indent": 0, "text": ["Sort"], "type": "title", "extent": [94, 103], "level": 0}, {"indent": 0, "type": "summary", "extent": [103, 161], "text": ["Reorders points and primitives in different ways."]}, {"indent": 0, "type": "para", "extent": [161, 326], "text": ["The Sort op allows you to reorder points and primitives in different\nways. Sometimes the primitives are arranged in the desired order, but\nthe point order is not."]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [331, 432], "text": ["To change the order of vertices within a primitive, use the ", {"text": ["Reverse\n    SOP"], "fullpath": "/nodes/sop/reverse", "scheme": "Node", "type": "link", "value": "/nodes/sop/reverse"}, "."]}], "indent": 0, "role": "item", "type": "tip", "extent": [326, 331]}], "container": true, "role": "item_group", "type": "tip_group"}, {"body": [{"body": [{"indent": 4, "blevel": 6, "type": "bullet", "extent": [468, 536], "text": ["Allow points and primitives to be sorted in different ways."]}, {"indent": 4, "blevel": 6, "type": "bullet", "extent": [536, 605], "text": ["Sorting along a vector aids with transparency viewing in GL."]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 2, "text": ["Uses / Works in Relation With"], "extent": [432, 468], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"body": [{"indent": 12, "type": "para", "extent": [677, 715], "text": ["Type of sort to perform."]}, {"body": [{"body": [{"indent": 16, "type": "para", "extent": [738, 921], "text": ["Leaves the points and primitives in their original\n                order. This allows one to reorder the points without\n                affecting the primitive order."]}], "indent": 12, "type": "dt", "extent": [715, 738], "text": ["No Change"]}, {"body": [{"indent": 16, "type": "para", "extent": [950, 1261], "text": ["Sorts points to match the order of the vertices on the\n                primitives that they belong to. If you have a curve\n                whose point numbers do not increase along the curve,\n                this will reorder the point numbers so they match the\n                curve direction."]}], "indent": 12, "type": "dt", "extent": [921, 950], "text": ["By Vertex Order"]}, {"body": [{"indent": 16, "type": "para", "extent": [1279, 1345], "text": ["Sorts points or primitives by increasing X value."]}], "indent": 12, "type": "dt", "extent": [1261, 1279], "text": ["By X"]}, {"body": [{"indent": 16, "type": "para", "extent": [1363, 1429], "text": ["Sorts points or primitives by increasing Y value."]}], "indent": 12, "type": "dt", "extent": [1345, 1363], "text": ["By Y"]}, {"body": [{"indent": 16, "type": "para", "extent": [1447, 1513], "text": ["Sorts points or primitives by increasing Z value."]}], "indent": 12, "type": "dt", "extent": [1429, 1447], "text": ["By Z"]}, {"body": [{"indent": 16, "type": "para", "extent": [1534, 1696], "text": ["Reverses the order of the points or primitives. The\n                highest numbered becomes the lowest numbered, and vice\n                versa."]}], "indent": 12, "type": "dt", "extent": [1513, 1534], "text": ["Reverse"]}, {"body": [{"indent": 16, "type": "para", "extent": [1716, 2007], "text": ["Using the random seed, each point or primitive is\n                assigned a random priority. They are then reordered\n                according to that priority. This has the effect of\n                generating a random ordering of the points or\n                primitives."]}], "indent": 12, "type": "dt", "extent": [1696, 1716], "text": ["Random"]}, {"body": [{"indent": 16, "type": "para", "extent": [2026, 2323], "text": ["Shift all of the point or primitive indices forward by\n                an offset. Each point or primitive number gets the\n                offset added to it to get its new number. If this\n                exceeds the number of points or primitives, it wraps\n                around."]}], "indent": 12, "type": "dt", "extent": [2007, 2026], "text": ["Shift"]}, {"body": [{"indent": 16, "type": "para", "extent": [2355, 2557], "text": ["The distance to a point in space is used as a priority.\n                The points or primitives are then sorted so that the 0th\n                entity is the one closest to that point."]}], "indent": 12, "type": "dt", "extent": [2323, 2355], "text": ["Proximity to Point"]}, {"body": [{"indent": 16, "type": "para", "extent": [2583, 2924], "text": ["Provides a generalization of the By X, By Y, and By Z\n                methods. Points are sorted in increasing distance along\n                the given vector. This vector is signed. A value of (0,\n                1, 0) will be the equivalent of sorting By Y, while a\n                value of (0, -1, 0) will be the reverse."]}], "indent": 12, "type": "dt", "extent": [2557, 2583], "text": ["Along Vector"]}, {"body": [{"indent": 16, "type": "para", "extent": [2951, 3500], "text": ["The specified expression is evaluated for each point or\n                primitive. This determines the priority of that\n                primitive, and the entities are reordered according to\n                that priority. The point or primitive with the least\n                evaluated expression value will be numbered 0 after the\n                sort. This will preserve the relative order of entities\n                with the same expression value, so multiple Sort SOPs\n                could be used to perform a multi-key sort."]}], "indent": 12, "type": "dt", "extent": [2924, 2951], "text": ["By Expression"]}, {"body": [{"indent": 16, "type": "para", "extent": [3530, 3957], "text": ["Points or primitives will be reordered so that objects that\n                are close together in space are likely to have similar\n                indices.  This option can help to improve the performance\n                of random access algorithms such as ray tracing, since\n                nearby primitives will reside close together in memory -\n                improving the effectiveness of the CPU cache."]}], "indent": 12, "type": "dt", "extent": [3500, 3530], "text": ["Spatial Locality"]}, {"body": [{"indent": 16, "type": "para", "extent": [3983, 4263], "text": ["Points or primitives will be reordered in ascending\n                values of the given attribute.  Only one component of\n                an attribute is sorted, but since the sort is stable multiple\n                passes could be done to sort by multiple keys."]}, {"indent": 16, "type": "para", "extent": [4263, 4332], "text": ["String, integer, and float attributes are supported."]}], "indent": 12, "type": "dt", "extent": [3957, 3983], "text": ["By Attribute"]}], "container": true, "type": "dt_group"}], "indent": 8, "text": ["Point/Primitive Sort"], "role": "item", "extent": [646, 677], "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [4391, 4457], "text": ["Seed used for random number generator in Random sort."]}], "indent": 8, "text": ["Seed"], "role": "item", "attrs": {"channels": "/pointseed /primseed"}, "extent": [4332, 4346], "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [4522, 4587], "text": ["Amount to shift point/primitive order in Shift sort."]}], "indent": 8, "text": ["Offset"], "role": "item", "attrs": {"channels": "/pointoffset /primoffset"}, "extent": [4457, 4473], "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [4695, 4765], "text": ["Position to reference when sorting by proximity to point."]}], "indent": 8, "text": ["Point"], "role": "item", "attrs": {"channels": "/pointproxx /pointproxy /pointproxz /primproxx /primproxy /primproxz"}, "extent": [4587, 4602], "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [4788, 4848], "text": ["Sort along a vector specified by object\u2019s xform"]}], "indent": 8, "text": ["Vector Object"], "role": "item", "extent": [4765, 4788], "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [4951, 5005], "text": ["Specify an arbitrary vector to sort along"]}], "indent": 8, "text": ["Vector"], "role": "item", "attrs": {"channels": "/pointdirx /pointdiry /pointdirz /primdirx /primdiry /primdirz"}, "extent": [4848, 4864], "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [5070, 5355], "text": ["Specifies an expression to sort by. Each object is reordered\n            so the elements who evaluated to a higher expression value\n            will be found after those with a lower value. Elements with\n            equal expression value maintain their relative position."]}], "indent": 8, "text": ["Expression"], "role": "item", "attrs": {"channels": "/pointexpr /primexpr"}, "extent": [5005, 5025], "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [5374, 5485], "text": ["The name of the attribute to sort by.  Must be a float, integer, or\n            string attribute."]}], "indent": 8, "text": ["Attribute"], "role": "item", "extent": [5355, 5374], "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [5504, 5637], "text": ["Which component of an attribute to sort by.  The attribute ", {"text": ["P"], "type": "code"}, " with\n            component 2 will sort by Z, for example."]}], "indent": 8, "text": ["Component"], "role": "item", "extent": [5485, 5504], "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [5665, 5719], "text": ["The sense of the point sort is reversed."]}, {"indent": 12, "type": "para", "extent": [5719, 5807], "text": ["When ", {"text": ["Point Sort"], "type": "ui"}, " is set to ", {"text": ["No Change"], "type": "ui"}, ", the points are still reversed."]}], "indent": 8, "text": ["Reverse Point Sort"], "role": "item", "extent": [5637, 5665], "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [5839, 5897], "text": ["The sense of the primitive sort is reversed."]}, {"indent": 12, "type": "para", "extent": [5897, 5993], "text": ["When ", {"text": ["Primitive Sort"], "type": "ui"}, " is set to ", {"text": ["No Change"], "type": "ui"}, ", the primitives are still reversed."]}], "indent": 8, "text": ["Reverse Primitive Sort"], "role": "item", "extent": [5807, 5839], "type": "parameters_item"}, {"body": [{"indent": 12, "type": "para", "extent": [6039, 6147], "text": ["When enabled, vertices are sorted to match the order in which they first appear in a primitive."]}], "indent": 8, "text": ["Sort Vertices by Order in Primitives"], "role": "item", "extent": [5993, 6039], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 4, "level": 2, "text": ["Point / Primitive"], "extent": [617, 646], "container": true, "type": "h", "id": null}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "extent": [605, 617], "container": true, "type": "parameters_section", "id": "parameters"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [6176, 6204], "text": ["Any geometry type."]}], "indent": 4, "type": "dt", "extent": [6155, 6176], "text": ["1 - Source data"]}], "container": true, "type": "dt_group"}], "indent": 0, "level": 1, "text": "Inputs", "role": "section", "extent": [6147, 6155], "container": true, "type": "inputs_section", "id": "inputs"}], "summary": ["Reorders points and primitives in different ways."], "type": "root", "attrs": {"version": null, "tags": "tech, topology, points", "namespace": null, "internal": "sort", "context": "sop", "type": "node", "icon": "MISC/generic"}, "title": ["Sort"]}