{"body": [{"indent": 0, "text": ["Vellum Solver"], "type": "title", "extent": [84, 102], "level": 0}, {"indent": 0, "type": "summary", "extent": [102, 144], "text": ["Runs a dynamic Vellum simulation."]}, {"indent": 0, "type": "para", "extent": [144, 239], "text": ["The Vellum Solver is a wrapper around a DOP network to simplify the running of\nVellum solves."]}, {"indent": 0, "type": "para", "extent": [239, 1006], "text": ["Like most Vellum SOPs, it is a three input SOP.   The first input is\nthe surface geometry to solve.  The second input should have the same\nnumber of points as the first, with point-to-point correspondence\neither with point numbers or ", {"text": ["id"], "type": "code"}, " attributes.   The second input\nalso should have special primitives describing the constraint relationships.\nConstraints are how the connectivity between points are defined and controlled\nand can be created with a Vellum Constraints SOP.   Note that the network tab\nmenu has several macros to refer to common setups, such as Vellum\nConfigure Cloth.   The third input provides the collision geometry.\nThe collision geometry should have matching topology frame-to-frame.\nIn addition, some types of packed geometry are recognized."]}, {"indent": 0, "type": "para", "extent": [1006, 1247], "text": ["You can dive into the solver to add DOP nodes to apply special forces.\nYou can also use the ", {"text": ["Vellum Constraint Property"], "fullpath": "/nodes/dop/vellumconstraintproperty", "scheme": "Node", "type": "link", "value": "/nodes/dop/vellumconstraintproperty"}, "\nDOP to adjust the constraint properties during the solve using these\ninternal nodes."]}, {"body": [{"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [1305, 1612], "text": ["Scales the effective time of the Vellum solve.  This can be used to\n    create bullet-time like effects where the physics of the Vellum\n    solver run at a different rate than the Houdini playbar.  A\n    value of 2 will cause cloth to fall twice as fast, and 0.1\n    will slow it to a tenth the speed."]}], "indent": 0, "text": ["Timescale"], "role": "item", "attrs": {"id": "timescale"}, "extent": [1273, 1285], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1641, 1785], "text": ["Each frame will be broken into this number of substeps.  Additional\n    substeps are required for fast moving collisions or sudden forces."]}, {"indent": 4, "type": "para", "extent": [1785, 1939], "text": ["The default substeps can be very aggressive, usually if the\n    Vellum solver is too stretchy, raising substeps to 2 or 5 is\n    a good first start."]}], "indent": 0, "text": ["Substeps"], "role": "item", "attrs": {"id": "substeps"}, "extent": [1612, 1622], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1978, 2266], "text": ["Within each substep, this number of passes will be taken by the\n    constraint enforcement operations.   Stiff constraints can\n    require more iterations to converge.  A good starting point\n    is the diameter of the geometry - the number of edges between\n    the farthest points."]}], "indent": 0, "text": ["Constraint Iterations"], "role": "item", "attrs": {"id": "niter"}, "extent": [1939, 1962], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2309, 2847], "text": ["The default constraint iterations use a Gauss-Seidel approach that\n    is fast to converge.  However, if it doesn\u2019t fully converge due to\n    too high stiffness, or impossible configurations, it will leave the error\n    as bad looking triangles.  The smoothing iterations use a Jacobi\n    approach which is slower to converge but leaves error spread out\n    in a more attractive fashion.  The default of ten passes helps\n    smooth out error, but might need to be increased if the overall\n    ", {"text": ["Constraint Iterations"], "type": "ui"}, " is very high."]}], "indent": 0, "text": ["Smoothing Iterations"], "role": "item", "attrs": {"id": "smoothiter"}, "extent": [2266, 2288], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [2913, 2970], "text": ["Controls if any collision detection is done at all."]}], "indent": 0, "text": ["Enable Collisions"], "role": "item", "attrs": {"id": "enablecollisions"}, "extent": [2866, 2886], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3014, 3061], "text": ["Controls if self collisions are detected."]}], "indent": 0, "text": ["Self Collisions"], "role": "item", "attrs": {"id": "doselfcollisions"}, "extent": [2970, 2987], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3095, 3198], "text": ["Adds a ground plane to the simulation.  The ground plane will\n    be visualized with a blue grid."]}], "indent": 0, "text": ["Ground Plane"], "role": "item", "attrs": {"id": "useground"}, "extent": [3061, 3075], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3235, 3285], "text": ["Location of the center of the ground plane."]}], "indent": 0, "text": ["Ground Position"], "role": "item", "attrs": {"id": "groundpos"}, "extent": [3198, 3215], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3328, 3771], "text": ["Number of collision detection passes to perform.  These are interleaved\n    between the constraint iterations.  Since collision is expensive, it is\n    best to minimize this.   But frequent interleaving helps avoid tent-poling\n    effects where a small collider is fighting with the no-stretch constraints.\n    In practice we find 10 to be correct for most situations, and substeps\n    often being a better solution to increase quality."]}], "indent": 0, "text": ["Collision Passes"], "role": "item", "attrs": {"id": "collisionsiter"}, "extent": [3285, 3303], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3822, 4309], "text": ["After all constraints are performed, a final round of collision detection\n    is done.   Collisions are often the most noticeable failure mode, and it\n    is ideal if the next frame can start with non-intersecting geometry.\n    Thus a final cleanup pass can achieve these requirements.   We have\n    found that \"number of stacked layers + 2\" is a good estimate for this\n    number.   This allows the effect of the underlying collider to ripple\n    through the stacked layers fully."]}], "indent": 0, "text": ["Post Collision Passes"], "role": "item", "attrs": {"id": "postcollisioniter"}, "extent": [3771, 3794], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4348, 4631], "text": ["In any collision pass, any colliding pair may not be fully resolved.   This\n    number of additional collider-pair passes will be run until they are\n    resolved.  Since these are only performed on active colliders (and no new\n    collision search is done) this is very cheap."]}], "indent": 0, "text": ["Polish Passes"], "role": "item", "attrs": {"id": "resolveallmax"}, "extent": [4309, 4324], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4665, 5210], "text": ["The ", {"text": ["layer"], "type": "code"}, " integer point attribute is used to flag point as belonging\n    to different layers of cloth.  Higher numbers refer to higher layers.\n    Layer Shock will make lower layers this many times heavier during collision\n    evaluation, ensuring the higher layers will move out of their way.  The\n    rest of the dynamics are unaffected by this, and the difference is fixed\n    regardless of the number of layers between the two.  This can be thought\n    of as a way to dial between one-way layering of sims and fully coupled\n    sims."]}], "indent": 0, "text": ["Layer Shock"], "role": "item", "attrs": {"id": "layershock"}, "extent": [4631, 4644], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Collisions"], "extent": [2847, 2866], "container": true, "type": "h", "id": null}], "indent": 0, "level": 2, "text": ["Solver"], "extent": [1259, 1273], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [5251, 5289], "text": ["Uniform gravity force to apply."]}], "indent": 0, "text": ["Gravity"], "role": "item", "attrs": {"id": "gravity"}, "extent": [5223, 5233], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5310, 5494], "text": ["A uniform wind direction.  Since this is a drag force, a wind of zero\n    will act like still air and slow everything down; and a high wind will\n    speed cloth up to that speed."]}], "indent": 0, "text": ["Wind"], "role": "item", "attrs": {"id": "wind"}, "extent": [5289, 5295], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5524, 5745], "text": ["The amount the particles are dragged by the wind force.  This is also\n    scaled by the tangential and normal drag forces specified on the\n    Vellum Constraints SOP to provide unequal drag depending on orientation."]}], "indent": 0, "text": ["Wind Drag"], "role": "item", "attrs": {"id": "winddrag"}, "extent": [5494, 5505], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [5808, 6092], "text": ["A threshold at which to apply full friction.  When the ratio of the tangential velocity and the normal impulse is less than this, the tangential velocity will be fully eliminated through friction.  This is roughly tan() of the slope angle that will allow sliding under gravity."]}], "indent": 0, "text": ["Static Threshold"], "role": "item", "attrs": {"id": "static_threshold"}, "extent": [5762, 5781], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6131, 6267], "text": ["If the static threshold fails, this controls what percentage the tangential velocity will be reduced in the dynamic friction case."]}], "indent": 0, "text": ["Dynamic Scale"], "role": "item", "attrs": {"id": "dynamic_scale"}, "extent": [6092, 6107], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6303, 6404], "text": ["A scale factor on the amount of friction effect to apply for collisions with external geometry."]}], "indent": 0, "text": ["Enable External"], "role": "item", "attrs": {"id": "friction"}, "extent": [6267, 6284], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6440, 6537], "text": ["A scale factor on the amount of friction effect to apply for collisions with self geometry."]}], "indent": 0, "text": ["Enable Self"], "role": "item", "attrs": {"id": "selffriction"}, "extent": [6404, 6417], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6584, 6688], "text": ["A scale factor for the ground plane\u2019s static friction.  Useful to\n    create frictionless grounds."]}], "indent": 0, "text": ["Ground Static Scale"], "role": "item", "attrs": {"id": "static_sdfscale"}, "extent": [6537, 6558], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6737, 6842], "text": ["A scale factor for the ground plane\u2019s dynamic friction.  Useful to\n    create frictionless grounds."]}], "indent": 0, "text": ["Ground Dynamic Scale"], "role": "item", "attrs": {"id": "dynamic_sdfscale"}, "extent": [6688, 6710], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Friction"], "extent": [5745, 5762], "container": true, "type": "h", "id": null}], "indent": 0, "level": 2, "text": ["Forces"], "extent": [5210, 5223], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [6899, 6940], "text": ["Clears the entire simulation cache."]}], "indent": 0, "text": ["Reset Simulation"], "role": "item", "attrs": {"id": "resimulate"}, "extent": [6859, 6878], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6978, 7031], "text": ["Controls if the simulation is cached to memory."]}], "indent": 0, "text": ["Cache Enabled"], "role": "item", "attrs": {"id": "cacheenabled"}, "extent": [6940, 6955], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7073, 7112], "text": ["Maximum size of the memory cache."]}], "indent": 0, "text": ["Cache Memory (MB)"], "role": "item", "attrs": {"id": "cachemaxsize"}, "extent": [7031, 7050], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7146, 7222], "text": ["What frame on the Houdini playbar that the simulation should begin at."]}], "indent": 0, "text": ["Start Frame"], "role": "item", "attrs": {"id": "startframe"}, "extent": [7112, 7125], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7264, 7294], "text": ["Style of the simulation."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [7311, 7517], "text": ["Each frame the simulation takes the inputs and runs them forward\n        the given number of frames.  The final result becomes that frames\n        result.   No frame-to-frame coherency is present."]}], "indent": 4, "type": "dt", "extent": [7294, 7311], "text": ["Quasistatic"]}, {"body": [{"indent": 8, "type": "para", "extent": [7530, 7648], "text": ["Each frame is solved from the previous frame, and the inputs are\n        used to setup the first frame only."]}], "indent": 4, "type": "dt", "extent": [7517, 7530], "text": ["Dynamic"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Simulation Type"], "role": "item", "attrs": {"id": "simulationtype"}, "extent": [7222, 7239], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7696, 7772], "text": ["The number of frames to roll forward for the quasi-static simulation."]}], "indent": 0, "text": ["Quasistatic Frames"], "role": "item", "attrs": {"id": "quasistaticframes"}, "extent": [7648, 7668], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7811, 8011], "text": ["All dynamic forces and states, such as velocities, are removed from\n    the output.   This allows the output of a clean state to start\n    a new simulation from, such as when completing a drape."]}], "indent": 0, "text": ["Clear Dynamics"], "role": "item", "attrs": {"id": "zerodynamics"}, "extent": [7772, 7788], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Simulation"], "extent": [6842, 6859], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [8058, 8327], "text": ["Points on the simulation mesh can be marked as ", {"text": ["Pin to Target"], "type": "ui"}, " to follow the targeted animation.   By default, this target is the first input.  But in some cases the animation you wish to target may be present in another SOP node, so that can be specified here."]}], "indent": 0, "text": ["Target"], "role": "item", "attrs": {"id": "targetmethod"}, "extent": [8026, 8035], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [8361, 8568], "text": ["The path of a node to refer to when simulation points are set to the\n    target animation.  Should have a one-to-one point correspondence\n    with the simulation points, either by point number or ", {"text": ["id"], "type": "code"}, "."]}], "indent": 0, "text": ["Target Path"], "role": "item", "attrs": {"id": "targetpath"}, "extent": [8327, 8340], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [8603, 8882], "text": ["When integrating points forward by their velocities, curved motions\n    like swinging pendulums will be mispredicted and be damped by\n    the constraint projections.   A second order predictor recovers more of\n    this curved motion and maintains more energy in the system."]}, {"indent": 4, "type": "para", "extent": [8882, 9001], "text": ["In any case, if collisions are detected the system will fall back\n    to first order to avoid excessive bouncing."]}], "indent": 0, "text": ["Integration"], "role": "item", "attrs": {"id": "integration"}, "extent": [8568, 8581], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [9038, 9232], "text": ["Various acceleration limiting options can be used to prevent the\n    simulation from being over-eager to obey non-realistic forces.   These\n    can otherwise result in large energy spikes."]}], "indent": 0, "text": ["Max Acceleration"], "role": "item", "attrs": {"id": "maxaccel"}, "extent": [9001, 9019], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [9306, 9604], "text": ["If ", {"text": ["Max Acceleration"], "type": "ui"}, " is exceeded for a point, assume it signals a sharp,\n    discontinuous collision where the second order prediction will be wrong\n    and add erroneous motion, often in the form of bouncing.  In this case,\n    fallback to first order integration for the affected point."]}], "indent": 0, "text": ["Fallback to First Order Integration on Collision"], "role": "item", "attrs": {"id": "accelfallback"}, "extent": [9232, 9282], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [9664, 9905], "text": ["Cap the amount that velocity of a particle is allowed to change as a\n    result of any of the dynamics.   This is useful to prevent some\n    instant motion being mis-identified as a massive force, and thus\n    avoid fly-away particles."]}], "indent": 0, "text": ["Limit Acceleration in Velocity Update"], "role": "item", "attrs": {"id": "limitaccel"}, "extent": [9604, 9643], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [9962, 10231], "text": ["During the collision resolution, if the collision correction moves a\n    particle more than the acceleration amount, cap the effect.  The hope\n    is to fail more gracefully when a part of a model snags on the cloth\n    and is pulling it in a surprising fashion."]}], "indent": 0, "text": ["Limit Displacement on Collision"], "role": "item", "attrs": {"id": "limitdisplace"}, "extent": [9905, 9938], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Advanced"], "extent": [8011, 8026], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [10288, 10341], "text": ["Show the collision object as a blue wireframe."]}], "indent": 0, "text": ["Show Collision"], "role": "item", "attrs": {"id": "showcollision"}, "extent": [10247, 10264], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [10382, 10435], "text": ["Show additional guide geometry from the solver."]}], "indent": 0, "text": ["Show Guide Geometry"], "role": "item", "attrs": {"id": "showguide"}, "extent": [10341, 10362], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"body": [{"body": [{"body": [{"type": "para", "indent": 4, "extent": [60, 429], "text": ["Draw spheres for the ", {"text": ["pscale"], "type": "code"}, " of the geometry.   If the geometry has already\n    solved it may have set the ", {"text": ["overlap_self"], "type": "code"}, " attribute, if so, the actual\n    effective thickness is drawn in cyan.  This is useful to detect if\n    the original thickness was too high - if so the extra thickness will\n    be ignored by the simulation and just slow down the collisions."]}], "indent": 0, "text": ["Thickness"], "role": "item", "attrs": {"id": "guide_thicknesscolor"}, "extent": [17, 29], "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [475, 583], "text": ["Draw the thickness by offsetting the geometry in opposite directions rather\n    than by using spheres."]}], "indent": 0, "text": ["Extrude"], "role": "item", "attrs": {"id": "guide_showthicknessextrude"}, "extent": [429, 438], "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [633, 801], "text": ["Draw failed self collisions as red spheres.  These points will no\n    longer collide with their own geometry, nor will any edge or triangle\n    attached to them."]}], "indent": 0, "text": ["Failed Self Collision"], "role": "item", "attrs": {"id": "guide_failedself"}, "extent": [583, 606], "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [859, 1032], "text": ["Draw failed external collisions as orange spheres.  These points will\n    no longer collide with external geometry, nor will any edge or triangle\n    attached to them."]}], "indent": 0, "text": ["Failed External Collision"], "role": "item", "attrs": {"id": "guide_failedexternal"}, "extent": [801, 828], "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [1065, 1257], "text": ["Draw which points have been semantically fused together with the\n    ", {"text": ["weld"], "type": "code"}, " attribute.  These can be broken during the solve using\n    the auto break options, or by setting ", {"text": ["weld"], "type": "code"}, " to -1."]}], "indent": 0, "text": ["Welds"], "role": "item", "attrs": {"id": "guide_weldcolor"}, "extent": [1032, 1039], "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [1299, 1471], "text": ["Because the thickness may be small, the visualization spheres can sometimes\n    be lost.  This scales the visualization spheres allowing them to\n    be readily seen."]}], "indent": 0, "text": ["Radius Scale"], "role": "item", "attrs": {"id": "guide_colvisscale"}, "extent": [1257, 1271], "type": "parameters_item"}], "type": "parameters_item_group", "container": true}], "container": true, "level": 3, "text": ["Geometry"], "extent": [0, 17], "indent": 0, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"type": "para", "indent": 4, "extent": [1531, 1653], "text": ["Constraints are often added to different groups.  This allows you to\n    isolate one particular group to visualize."]}], "indent": 0, "text": ["Group"], "role": "item", "attrs": {"id": "guide_constraintgroup"}, "extent": [1491, 1499], "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [1693, 1755], "text": ["Draw spheres over points pinned to the target animation."]}], "indent": 0, "text": ["Pin to Target"], "role": "item", "attrs": {"id": "guide_pincolor"}, "extent": [1653, 1668], "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [1798, 1856], "text": ["Draw stitch constraints of points stitched together."]}], "indent": 0, "text": ["Stitch Points"], "role": "item", "attrs": {"id": "guide_stitchcolor"}, "extent": [1755, 1770], "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [1904, 1979], "text": ["Draw attachment constraints for points attached to external geometry."]}], "indent": 0, "text": ["Attach to Geometry"], "role": "item", "attrs": {"id": "guide_attachcolor"}, "extent": [1856, 1876], "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [2023, 2153], "text": ["The constraint guides are not scaled by the thickness of the object,\n    so this provides an absolute scale for their size."]}], "indent": 0, "text": ["Radius"], "role": "item", "attrs": {"id": "guide_constraintvisradius"}, "extent": [1979, 1987], "type": "parameters_item"}], "type": "parameters_item_group", "container": true}], "container": true, "level": 3, "text": ["Constraints"], "extent": [1471, 1491], "indent": 0, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"type": "para", "indent": 4, "extent": [2213, 2297], "text": ["Visualize properties of the constraints using a blue-to-red infrared coloring."]}, {"body": [{"body": [{"type": "para", "indent": 8, "extent": [2307, 2343], "text": ["Leave the original colors."]}], "type": "dt", "indent": 4, "extent": [2297, 2307], "text": ["None"]}, {"body": [{"type": "para", "indent": 8, "extent": [2363, 2448], "text": ["Color according to the maximum stretching force applied by the constraints."]}], "type": "dt", "indent": 4, "extent": [2343, 2363], "text": ["Stretch Stress"]}, {"body": [{"type": "para", "indent": 8, "extent": [2465, 2547], "text": ["Color according to the maximum bending force applied by the constraints."]}], "type": "dt", "indent": 4, "extent": [2448, 2465], "text": ["Bend Stress"]}, {"body": [{"type": "para", "indent": 8, "extent": [2569, 2632], "text": ["Color according to how far constraints are stretched."]}], "type": "dt", "indent": 4, "extent": [2547, 2569], "text": ["Stretch Distance"]}, {"body": [{"type": "para", "indent": 8, "extent": [2651, 2724], "text": ["Color according the ratio between original and current stretch."]}], "type": "dt", "indent": 4, "extent": [2632, 2651], "text": ["Stretch Ratio"]}, {"body": [{"type": "para", "indent": 8, "extent": [2740, 2814], "text": ["Color according to how many degrees the bend angle has deviated."]}], "type": "dt", "indent": 4, "extent": [2724, 2740], "text": ["Bend Angle"]}, {"body": [{"type": "para", "indent": 8, "extent": [2840, 2922], "text": ["Color according to how much the stretch plastic flow has been triggered."]}], "type": "dt", "indent": 4, "extent": [2814, 2840], "text": ["Stretch Plastic Flow"]}, {"body": [{"type": "para", "indent": 8, "extent": [2945, 3025], "text": ["Color according to how much the bend plastic flow has been triggered."]}], "type": "dt", "indent": 4, "extent": [2922, 2945], "text": ["Bend Plastic Flow"]}], "type": "dt_group", "container": true}], "indent": 0, "text": ["False Color Mode"], "role": "item", "attrs": {"id": "vis_mode"}, "extent": [2175, 2194], "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [3082, 3172], "text": ["Toggles if the simulation geometry is false-colored in addition to the constraints."]}], "indent": 0, "text": ["Display Visualization Geometry"], "role": "item", "attrs": {"id": "vis_displaygeo"}, "extent": [3025, 3057], "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [3223, 3293], "text": ["Scales the maximum stretch stress to be the maximum coloration."]}], "indent": 0, "text": ["Max Stretch Stress"], "role": "item", "attrs": {"id": "vis_maxstretchstress"}, "extent": [3172, 3192], "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [3338, 3404], "text": ["Scales the maximum bend stress to be the maximum coloration."]}], "indent": 0, "text": ["Max Bend Stress"], "role": "item", "attrs": {"id": "vis_maxbendstress"}, "extent": [3293, 3310], "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [3459, 3528], "text": ["Sets the maximum stretch distance to be the maximum coloration."]}], "indent": 0, "text": ["Max Stretch Distance"], "role": "item", "attrs": {"id": "vis_maxstretchdistance"}, "extent": [3404, 3426], "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [3577, 3643], "text": ["Sets the maximum stretch ratio to be the maximum coloration."]}], "indent": 0, "text": ["Max Stretch Ratio"], "role": "item", "attrs": {"id": "vis_maxstretchratio"}, "extent": [3528, 3547], "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [3686, 3749], "text": ["Sets the maximum bend angle to be the maximum coloration."]}], "indent": 0, "text": ["Max Bend Angle"], "role": "item", "attrs": {"id": "vis_maxbendangle"}, "extent": [3643, 3659], "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [3811, 3884], "text": ["Sets the maximum stretch plastic flow to be the maximum coloration."]}], "indent": 0, "text": ["Max Stretch Plastic Flow"], "role": "item", "attrs": {"id": "vis_maxstretchplasticflow"}, "extent": [3749, 3775], "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [3940, 4009], "text": ["Sets the maximum bend plastic flow to be the maximum coloration."]}], "indent": 0, "text": ["Max Bend Plastic Flow"], "role": "item", "attrs": {"id": "vis_maxbendplasticflow"}, "extent": [3884, 3907], "type": "parameters_item"}], "type": "parameters_item_group", "container": true}], "container": true, "level": 3, "text": ["Visualization"], "extent": [2153, 2175], "indent": 0, "type": "h", "id": null}], "indent": 0, "level": 2, "text": ["Visualize"], "extent": [10231, 10247], "container": true, "type": "h", "id": null}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "extent": [1247, 1259], "container": true, "type": "parameters_section", "id": "parameters"}, {"body": [{"body": [{"indent": 4, "blevel": 6, "type": "bullet", "extent": [10482, 10511], "text": [{"text": "", "fullpath": "/nodes/sop/vellumdrape", "scheme": "Node", "type": "link", "value": "/nodes/sop/vellumdrape"}]}, {"indent": 4, "blevel": 6, "type": "bullet", "extent": [10511, 10546], "text": [{"text": "", "fullpath": "/nodes/sop/vellumconstraints", "scheme": "Node", "type": "link", "value": "/nodes/sop/vellumconstraints"}]}, {"indent": 4, "blevel": 6, "type": "bullet", "extent": [10546, 10587], "text": [{"text": "", "fullpath": "/nodes/sop/vellumconstraints_grain", "scheme": "Node", "type": "link", "value": "/nodes/sop/vellumconstraints_grain"}]}, {"indent": 4, "blevel": 6, "type": "bullet", "extent": [10587, 10613], "text": [{"text": "", "fullpath": "/nodes/sop/vellumio", "scheme": "Node", "type": "link", "value": "/nodes/sop/vellumio"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 1, "text": "Related", "role": "section", "extent": [10473, 10482], "container": true, "type": "related_section", "id": "related"}], "title": ["Vellum Solver"], "summary": ["Runs a dynamic Vellum simulation."], "attrs": {"version": null, "namespace": null, "internal": "vellumsolver", "context": "sop", "type": "node", "icon": "DOP/vellumsolver"}, "included": ["/nodes/sop/_vellum_common"], "type": "root"}