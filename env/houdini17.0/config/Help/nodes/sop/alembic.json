{"body": [{"indent": 0, "text": ["Alembic"], "type": "title", "extent": [0, 12], "level": 0}, {"indent": 0, "type": "summary", "extent": [97, 192], "text": ["Loads the geometry from an Alembic scene archive (", {"text": [".abc"], "type": "code"}, ") file into a geometry network."]}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [239, 297], "text": ["Clears the Alembic cache and reloads fresh geometry."]}], "indent": 0, "text": ["Reload Geometry"], "role": "item", "attrs": {"id": "reload"}, "extent": [204, 222], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [334, 383], "text": ["Use this multiparm to apply Alembic layers."]}], "indent": 0, "text": ["Number of Layers"], "role": "item", "attrs": {"id": "numlayers"}, "extent": [297, 315], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [421, 469], "text": ["Path to the Alembic archive (", {"text": [".abc"], "type": "code"}, ") file."]}], "indent": 0, "text": ["File name"], "role": "item", "attrs": {"id": "fileName"}, "extent": [383, 394], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [496, 734], "text": ["The ", {"text": ["Alembic"], "type": "em"}, " frame at which to sample the geometry. The default value is\n    ", {"text": ["$F"], "type": "code"}, " (Houdini\u2019s current frame). If you need to offset the start time of the\n    animation in the archive, you can add or subtract frames (e.g. ", {"text": ["$F + 48"], "type": "code"}, ")."]}], "indent": 0, "text": ["Frame"], "role": "item", "attrs": {"id": "frame"}, "extent": [469, 476], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [771, 1056], "text": ["Combined with the ", {"text": ["Frame"], "type": "ui"}, " parameter, this is used to convert Alembic\u2019s\n    time-based animation to Houdini frames. The default is ", {"text": ["$FPS"], "type": "code"}, " (Houdini\u2019s\n    current frames-per-second setting). If the archive file was created with a\n    different FPS, you will need to enter it here."]}], "indent": 0, "text": ["Frames per second"], "role": "item", "attrs": {"id": "fps"}, "extent": [734, 753], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1070, 1393], "text": ["What should be done if the specified file does not exist on disk.\n    By default, if there\u2019s a missing or invalid Alembic archive,\n    the SOP will error.  This can be troublesome in a network that can\n    recover from the error.  In these cases the behavior can be set to No\n    Geometry so only a warning is posted."]}], "indent": 0, "text": ["Missing File"], "role": "item", "extent": [1056, 1070], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [1451, 1584], "text": ["Packed primitives can be created for shapes, transforms, or both. By default\n    packed primitives are only created for shapes."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [1606, 1651], "text": ["Geometry in the Alembic scene only."]}], "indent": 4, "type": "dt", "extent": [1584, 1606], "text": ["Shape Nodes Only"]}, {"body": [{"indent": 8, "type": "para", "extent": [1678, 1733], "text": ["Geometry and transforms in the Alembic scene."]}], "indent": 4, "type": "dt", "extent": [1651, 1678], "text": ["Shapes and Transforms"]}, {"body": [{"indent": 8, "type": "para", "extent": [1759, 1806], "text": ["Transforms in the Alembic scene only."]}], "indent": 4, "type": "dt", "extent": [1733, 1759], "text": ["Transform Nodes Only"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Create Primitives For"], "role": "item", "attrs": {"id": "abcxform"}, "extent": [1408, 1432], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1838, 1894], "text": ["How to load the Alembic geometry into Houdini:"]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [1931, 2218], "text": ["These custom primitives are very light-weight and will display\n        faster in the viewport.  They are not as full featured as other\n        Houdini primitive types (i.e. ray-tracing is not very accurate),\n        but can be converted to other primitive types if need be."]}], "indent": 4, "type": "dt", "extent": [1894, 1931], "text": ["Alembic Delayed Load Primitives"]}, {"body": [{"indent": 8, "type": "para", "extent": [2262, 2416], "text": ["Load the geometry as Alembic packed primitives and\n        then automatically unpack the geometry to create native\n        Houdini geometry."]}], "indent": 4, "type": "dt", "extent": [2218, 2262], "text": ["Unpack Alembic Delayed Load Primitives"]}, {"body": [{"indent": 8, "type": "para", "extent": [2443, 2527], "text": ["Convert the Alembic primitives to use native Houdini geometry."]}], "indent": 4, "type": "dt", "extent": [2416, 2443], "text": ["Load Houdini Geometry"]}, {"body": [{"indent": 8, "type": "para", "extent": [2552, 2727], "text": ["Load the ", {"text": ["P"], "type": "code"}, " attribute from the Alembic primitives as a Houdini\n        point cloud.  Currently, this doesn\u2019t load any attributes other\n        than ", {"text": ["P"], "type": "code"}, "."]}], "indent": 4, "type": "dt", "extent": [2527, 2552], "text": ["Houdini Point Cloud"]}, {"body": [{"indent": 8, "type": "para", "extent": [2747, 2812], "text": ["Load only the bounding boxes of the Alembic primitives."]}], "indent": 4, "type": "dt", "extent": [2727, 2747], "text": ["Bounding Boxes"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Load As"], "role": "item", "attrs": {"id": "loadmode"}, "extent": [1806, 1815], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2850, 2914], "text": ["How the Alembic geometry is displayed in the viewport."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [2933, 2991], "text": ["The Alembic geometry is fully displayed."]}], "indent": 4, "type": "dt", "extent": [2914, 2933], "text": ["Full Geometry"]}, {"body": [{"indent": 8, "type": "para", "extent": [3008, 3056], "text": ["Only the points are displayed."]}], "indent": 4, "type": "dt", "extent": [2991, 3008], "text": ["Point Cloud"]}, {"body": [{"indent": 8, "type": "para", "extent": [3074, 3139], "text": ["Only the geometry bounding boxes are displayed."]}], "indent": 4, "type": "dt", "extent": [3056, 3074], "text": ["Bounding Box"]}, {"body": [{"indent": 8, "type": "para", "extent": [3153, 3215], "text": ["Only the geometry centroid is displayed."]}], "indent": 4, "type": "dt", "extent": [3139, 3153], "text": ["Centroid"]}, {"body": [{"indent": 8, "type": "para", "extent": [3227, 3262], "text": ["No geometry is displayed."]}], "indent": 4, "type": "dt", "extent": [3215, 3227], "text": ["Hidden"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Display As"], "role": "item", "attrs": {"id": "viewportlod"}, "extent": [2812, 2824], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3294, 3552], "text": ["When loading Alembic Delayed Load primitives, you can create an unique point for each primitive, or all the Alembic primitives can share a single point.  The unique points can all be at the origin, or alternatively, located at the primitive\u2019s centroid."]}], "indent": 0, "text": ["Points"], "role": "item", "attrs": {"id": "pointmode"}, "extent": [3262, 3270], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3593, 3890], "text": ["When loading Houdini geometry, this option determines whether Alembic Polygon Meshes will be converted to Houdini Poly Soup primitives.  Houdini Poly Soup primitives use less resources to store and render.  At the current time Poly Soups cannot be rendered as subdivision surfaces by Mantra."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [3919, 4047], "text": ["No polygon soup primitives will be created.  Each face in a mesh will have a unique Houdini polygon primitive."]}], "indent": 4, "type": "dt", "extent": [3890, 3919], "text": ["No Poly Soup Primitives"]}, {"body": [{"indent": 8, "type": "para", "extent": [4086, 4281], "text": ["Create polygon soup primitives for Alembic Polygon Meshes where possible.  This will currently not be done if there are uniform attributes on the mesh or if there are face sets."]}], "indent": 4, "type": "dt", "extent": [4047, 4086], "text": ["Use Poly Soups For Polygon Meshes"]}, {"body": [{"indent": 8, "type": "para", "extent": [4319, 4507], "text": ["Create Poly Soup primitives for both Alembic Polygon Meshes and Alembic Subdivision Surface primitives.  If there are uniform attributes (per-face attributes) these will be lost."]}], "indent": 4, "type": "dt", "extent": [4281, 4319], "text": ["Use Poly Soups Wherever Possible"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Poly Soup Primitives"], "role": "item", "attrs": {"id": "polysoup"}, "extent": [3552, 3574], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4569, 4697], "text": ["Bake each object\u2019s world space transformation (relative to the root of the\n    archive) into the primitives of the object."]}], "indent": 0, "text": ["Transform Geometry To World Space"], "role": "item", "attrs": {"id": "includeXform"}, "extent": [4507, 4542], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4745, 5078], "text": ["Use the visibility settings defined in the Alembic file to determine\n    whether to load geometry.  When loading Alembic Delayed Load\n    primitives, hidden primitives will still be loaded, but will not create\n    any visible geometry.  There may be additional cost to using visibility\n    with Alembic Delayed Load primitives."]}], "indent": 0, "text": ["Use Visibility"], "role": "item", "attrs": {"id": "usevisibility"}, "extent": [4697, 4713], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5146, 5379], "text": ["Set the time/frame for static geometry to 0 regardless of the frame\n    specified.  This is an optimization that lets mantra load static\n    geometry slightly faster when there are multiple instances of the same\n    shape node."]}], "indent": 0, "text": ["Set Zero Time for Static Geometry"], "role": "item", "attrs": {"id": "statictimezero"}, "extent": [5078, 5113], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5422, 5651], "text": ["Whether to create group names on the Alembic shape nodes, or whether to use\n    the transform (object) name. If a transform object has multiple shape\n    nodes, it\u2019s sometimes useful to put the geometry into the same group."]}], "indent": 0, "text": ["Primitive Groups"], "role": "item", "attrs": {"id": "groupnames"}, "extent": [5379, 5397], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5694, 5807], "text": ["When loading Houdini geometry, all subdivision shape nodes in the Alembic file will be added to this group."]}], "indent": 0, "text": ["Subdivision Group"], "role": "item", "attrs": {"id": "subdgroup"}, "extent": [5651, 5670], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Geometry"], "extent": [1393, 1408], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [5862, 6060], "text": ["A path to one or more objects inside the archive. If specified, the node will load only these object and their children. The default is blank, which means load all the geometry in the archive."]}], "indent": 0, "text": ["Object Path"], "role": "item", "attrs": {"id": "objectPath"}, "extent": [5823, 5837], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6104, 6363], "text": ["A path to one or more objects inside the archive. If specified, the node will skip loading these objects and their children. These exclusions override the objects specified in the Object Path. The default is blank, which means don\u2019t exclude any objects."]}], "indent": 0, "text": ["Object Exclude"], "role": "item", "attrs": {"id": "objectExclude"}, "extent": [6060, 6076], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6407, 6578], "text": ["Only objects matching this pattern will be loaded. This is a more generic\n    and likely simpler way of specifying objects to be loaded than the ", {"text": ["Object\n    Path"], "type": "ui"}, "."]}], "indent": 0, "text": ["Object Pattern"], "role": "item", "attrs": {"id": "objectPattern"}, "extent": [6363, 6379], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6627, 6713], "text": ["This allows you to filter objects based on whether they are animated or not."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [6751, 6822], "text": ["Load primitives whether they are animating or static."]}], "indent": 4, "type": "dt", "extent": [6713, 6751], "text": ["Include All Primitives (default)"]}, {"body": [{"indent": 8, "type": "para", "extent": [6850, 6914], "text": ["Only load primitives which are ", {"text": ["not"], "type": "strong"}, " animated."]}], "indent": 4, "type": "dt", "extent": [6822, 6850], "text": ["Only Static Primitives"]}, {"body": [{"indent": 8, "type": "para", "extent": [6945, 7027], "text": ["Only load primitives with point positions that change over time."]}], "indent": 4, "type": "dt", "extent": [6914, 6945], "text": ["Only Deforming Primitives"]}, {"body": [{"indent": 8, "type": "para", "extent": [7061, 7155], "text": ["Only load primitives with parent transformation nodes that change over time."]}], "indent": 4, "type": "dt", "extent": [7027, 7061], "text": ["Only Transforming Primitives"]}, {"body": [{"indent": 8, "type": "para", "extent": [7202, 7252], "text": ["Only load primitives which are animated."]}], "indent": 4, "type": "dt", "extent": [7155, 7202], "text": ["Only Deforming or Transforming Primitives"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Animating Objects"], "role": "item", "attrs": {"id": "animationfilter"}, "extent": [6578, 6597], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7291, 7329], "text": ["This allows loading of polygons."]}], "indent": 0, "text": ["Load Polygons"], "role": "item", "attrs": {"id": "polygonFilter"}, "extent": [7252, 7267], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7364, 7400], "text": ["This allows loading of curves."]}], "indent": 0, "text": ["Load Curves"], "role": "item", "attrs": {"id": "curveFilter"}, "extent": [7329, 7342], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7434, 7469], "text": ["This allows loading of NURBS."]}], "indent": 0, "text": ["Load NURBS"], "role": "item", "attrs": {"id": "NURBSFilter"}, "extent": [7400, 7412], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7505, 7541], "text": ["This allows loading of points."]}], "indent": 0, "text": ["Load Points"], "role": "item", "attrs": {"id": "pointsFilter"}, "extent": [7469, 7482], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7589, 7639], "text": ["This allows loading of subdivision surfaces."]}], "indent": 0, "text": ["Load Subdivision Surfaces"], "role": "item", "attrs": {"id": "subdFilter"}, "extent": [7541, 7568], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7684, 7792], "text": ["Test for transform nodes which match how Maya saves out locater nodes and\n    load these into Houdini."]}], "indent": 0, "text": ["Load Maya Locater"], "role": "item", "attrs": {"id": "loadLocator"}, "extent": [7639, 7658], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7827, 7914], "text": ["This allows you to only load primitives based on their bounding box in space."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [7950, 7989], "text": ["Loads all primitives."]}], "indent": 4, "type": "dt", "extent": [7914, 7950], "text": ["No spatial filtering (default)"]}, {"body": [{"indent": 8, "type": "para", "extent": [8027, 8127], "text": ["Loads only objects which are entirely contained inside the specified bounding box."]}], "indent": 4, "type": "dt", "extent": [7989, 8027], "text": ["Load Objects Entirely Inside Box"]}, {"body": [{"indent": 8, "type": "para", "extent": [8166, 8268], "text": ["Loads only objects whose bounding box intersects the specified bounding\n        box."]}], "indent": 4, "type": "dt", "extent": [8127, 8166], "text": ["Load Objects Partially Inside Box"]}, {"body": [{"indent": 8, "type": "para", "extent": [8307, 8398], "text": ["Loads only objects which are entirely outside the specified bounding box."]}], "indent": 4, "type": "dt", "extent": [8268, 8307], "text": ["Load Objects Entirely Outside Box"]}, {"body": [{"indent": 8, "type": "para", "extent": [8438, 8542], "text": ["Loads only objects whose bounding box is not entirely contained in the specified bounding box."]}], "indent": 4, "type": "dt", "extent": [8398, 8438], "text": ["Load Objects Partially Outside Box"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Box Culling"], "role": "item", "attrs": {"id": "boxcull"}, "extent": [7792, 7805], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [8598, 8690], "text": ["Use the input to the Alembic SOP to specify the bounding box used for Box\n    Culling."]}], "indent": 0, "text": ["Use First Input To Specify Box"], "role": "item", "attrs": {"id": "boxsource"}, "extent": [8542, 8574], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [8722, 8782], "text": ["Manually specify the size of the culling bounding box."]}], "indent": 0, "text": ["Box Size"], "role": "item", "attrs": {"id": "boxsize"}, "extent": [8690, 8700], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [8818, 8879], "text": ["Manually specify the center of the culling bounding box"]}], "indent": 0, "text": ["Box Center"], "role": "item", "attrs": {"id": "boxcenter"}, "extent": [8782, 8794], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [8912, 8998], "text": ["This allows you to only load primitives based on the size of their bounding box."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [9031, 9062], "text": ["Loads all primitives."]}], "indent": 4, "type": "dt", "extent": [8998, 9031], "text": ["No size filtering (default)"]}, {"body": [{"indent": 8, "type": "para", "extent": [9099, 9190], "text": ["Loads only objects which are bounded by a box that matches the radius constraint."]}], "indent": 4, "type": "dt", "extent": [9062, 9099], "text": ["Filter Objects By Bounding Area"]}, {"body": [{"indent": 8, "type": "para", "extent": [9229, 9323], "text": ["Loads only objects which are bounded by a sphere that matches the radius constraint."]}], "indent": 4, "type": "dt", "extent": [9190, 9229], "text": ["Filter Objects By Bounding Radius"]}, {"body": [{"indent": 8, "type": "para", "extent": [9362, 9453], "text": ["Loads only objects which are bounded by a box that matches the volume constraint."]}], "indent": 4, "type": "dt", "extent": [9323, 9362], "text": ["Filter Objects By Bounding Volume"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Size Culling"], "role": "item", "attrs": {"id": "sizecull"}, "extent": [8879, 8893], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [9489, 9569], "text": ["This allows you to specify the test used when comparing each bounding box."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [9584, 9670], "text": ["Loads only objects which are bounded by box smaller than the specified size."]}], "indent": 4, "type": "dt", "extent": [9569, 9584], "text": ["Less Than"]}, {"body": [{"indent": 8, "type": "para", "extent": [9688, 9773], "text": ["Loads only objects which are bounded by box larger than the specified size."]}], "indent": 4, "type": "dt", "extent": [9670, 9688], "text": ["Greater Than"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Size Compare"], "role": "item", "attrs": {"id": "sizecompare"}, "extent": [9453, 9467], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [9794, 9857], "text": ["Specifies the size each bounding box is compared against."]}], "indent": 0, "text": ["Size"], "role": "item", "attrs": {"id": "size"}, "extent": [9773, 9779], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Selection"], "extent": [5807, 5823], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [9923, 9993], "text": ["Only point attributes matching the given pattern will be loaded."]}], "indent": 0, "text": ["Point Attributes"], "role": "item", "attrs": {"id": "pointAttributes"}, "extent": [9874, 9893], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [10043, 10114], "text": ["Only vertex attributes matching the given pattern will be loaded."]}], "indent": 0, "text": ["Vertex Attributes"], "role": "item", "attrs": {"id": "vertexAttributes"}, "extent": [9993, 10012], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [10170, 10244], "text": ["Only primitive attributes matching the given pattern will be loaded."]}], "indent": 0, "text": ["Primitive Attributes"], "role": "item", "attrs": {"id": "primitiveAttributes"}, "extent": [10114, 10136], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [10294, 10365], "text": ["Only detail attributes matching the given pattern will be loaded."]}], "indent": 0, "text": ["Detail Attributes"], "role": "item", "attrs": {"id": "detailAttributes"}, "extent": [10244, 10263], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [10417, 10489], "text": ["Only faceset attributes matching the given pattern will be loaded."]}], "indent": 0, "text": ["Faceset Attributes"], "role": "item", "attrs": {"id": "facesetAttributes"}, "extent": [10365, 10385], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [10495, 10710], "text": ["All intrinsic attributes on Alembic nodes will be created in all cases. For\n    example, the ", {"text": ["velocity"], "type": "code"}, " attribute on points will be created regardless of\n    whether it matches the ", {"text": ["Point Attribute"], "type": "ui"}, " pattern."]}], "indent": 0, "role": "item", "type": "note", "extent": [10489, 10495]}], "container": true, "role": "item_group", "type": "note_group"}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [10763, 10823], "text": ["How Alembic user properties should be handled."]}, {"body": [{"body": [{"indent": 16, "type": "para", "extent": [10840, 10901], "text": ["User properties are not loaded."]}, {"body": [{"body": [{"indent": 16, "type": "para", "extent": [10927, 11056], "text": ["User property values are loaded as a JSON dictionary into a\n                primitive string attribute."]}], "indent": 8, "type": "dt", "extent": [10901, 10927], "text": ["Load Values Only"]}, {"body": [{"indent": 16, "type": "para", "extent": [11090, 11393], "text": ["User property values are loaded as a JSON dictionary into a\n                primitive string attribute. User property metadata, useful for\n                interpreting and processing the values, is loaded as a JSON\n                dictionary into a separate primitive string attribute."]}], "indent": 8, "type": "dt", "extent": [11056, 11090], "text": ["Load Values and Metadata"]}], "container": true, "type": "dt_group"}], "indent": 4, "type": "dt", "extent": [10823, 10840], "text": ["Do Not Load"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["User Properties"], "role": "item", "attrs": {"id": "loadUserProps"}, "extent": [10710, 10727], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [11435, 11636], "text": ["This option allows you to put the full path of the shape node into the\n    named string attribute, since Houdini can mangle the group names (no\n    special characters are allowed in group names)."]}], "indent": 0, "text": ["Add Path Attribute"], "role": "item", "attrs": {"id": "addpath"}, "extent": [11393, 11413], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [11677, 11714], "text": ["The name of the Path Attribute."]}], "indent": 0, "text": ["Path Attribute"], "role": "item", "attrs": {"id": "pathattrib"}, "extent": [11636, 11652], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [11760, 11813], "text": ["Add a detail attribute containing the filename."]}], "indent": 0, "text": ["Add Filename Attribute"], "role": "item", "attrs": {"id": "addfile"}, "extent": [11714, 11738], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [11858, 11899], "text": ["The name of the Filename Attribute."]}], "indent": 0, "text": ["Filename Attribute"], "role": "item", "attrs": {"id": "fileattrib"}, "extent": [11813, 11833], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [11947, 12215], "text": ["Use this multiparm to rename Alembic point, vertex, and/or primitive\n    attributes to their Houdini equivalents and optionally change their type\n    info.  For example, remapping ", {"text": ["MyColor"], "type": "code"}, " to ", {"text": ["Cd"], "type": "code"}, " (diffuse color). Click\n    the ", {"keys": ["+"], "text": null, "type": "keys"}, " button to add a new mapping."]}], "indent": 0, "text": ["Remap attributes"], "role": "item", "attrs": {"id": "remapAttributes"}, "extent": [11899, 11917], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Attributes"], "extent": [9857, 9874], "container": true, "type": "h", "id": null}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "extent": [192, 204], "container": true, "type": "parameters_section", "id": "parameters"}], "summary": ["Loads the geometry from an Alembic scene archive (", {"text": [".abc"], "type": "code"}, ") file into a geometry network."], "type": "root", "attrs": {"version": null, "tags": "alembic, io", "namespace": null, "internal": "alembic", "context": "sop", "type": "node", "icon": "SOP/alembic"}, "title": ["Alembic"]}