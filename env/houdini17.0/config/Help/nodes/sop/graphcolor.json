{"body": [{"indent": 0, "text": ["Graph Color"], "type": "title", "extent": [80, 96], "level": 0}, {"indent": 0, "type": "summary", "extent": [96, 167], "text": ["Assigns a unique integer attribute to non-touching components."]}, {"indent": 0, "type": "para", "extent": [167, 351], "text": ["The Graph Color SOP assigns an integer value to each point or primitive.  The\ncoloring is built so that points or primitives that are directly connected will\nnot have the same color."]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [357, 441], "text": ["Graph coloring is a hard problem, so this does not attempt an exact solution. "]}], "indent": 0, "role": "item", "type": "note", "extent": [351, 357]}], "container": true, "role": "item_group", "type": "note_group"}, {"indent": 0, "type": "para", "extent": [441, 607], "text": ["Graph colorings can be very useful for OpenCL algorithms as they can\nsplit the polygons and points into non-overlapping groups that\ncan be operated on in parallel."]}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [654, 752], "text": ["The integer attribute to create, if missing, and initialize to\n    the color value."]}], "indent": 0, "text": ["Color Attribute"], "role": "item", "attrs": {"id": "attrib"}, "extent": [619, 637], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [781, 948], "text": ["How to determine if two points or two primitives are connected.  This\n    also implicitly determines if the attribute is a point or primitive \n    attribute."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [963, 1078], "text": ["Two primitives are connected if they have any point in common.  A primitive attribute is created."]}], "indent": 4, "type": "dt", "extent": [948, 963], "text": ["Primitive"]}, {"body": [{"indent": 8, "type": "para", "extent": [1089, 1205], "text": ["Two points are connected if they both belong to the same primitive.  A point attribute is created."]}], "indent": 4, "type": "dt", "extent": [1078, 1089], "text": ["Point"]}, {"body": [{"indent": 8, "type": "para", "extent": [1223, 1365], "text": ["Two primitives are connected if they have a shared edge.  This applies only for closed polygons.   A primitive attribute is created."]}, {"indent": 8, "type": "para", "extent": [1365, 1450], "text": ["Note that the \"map coloring\" problem corresponds to this mode."]}], "indent": 4, "type": "dt", "extent": [1205, 1223], "text": ["Polygon Edge"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Connectivity"], "role": "item", "attrs": {"id": "type"}, "extent": [752, 766], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1493, 1573], "text": ["Sort the geometry so contiguous blocks have the same graph color."]}], "indent": 0, "text": ["Sort Output by Color"], "role": "item", "attrs": {"id": "sortoutput"}, "extent": [1450, 1472], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1625, 1768], "text": ["Create a pair of detail attributes suitable for the OpenCL SOP to run over the groups in multiple passes using the workset mode."]}], "indent": 0, "text": ["Create Workset Attributes"], "role": "item", "attrs": {"id": "createworksets"}, "extent": [1573, 1600], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1815, 1910], "text": ["This array attribute stores the index of the start of each unique color in the graph."]}], "indent": 0, "text": ["Worksets Begin Attr."], "role": "item", "attrs": {"id": "worksets_begin"}, "extent": [1768, 1790], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1959, 2043], "text": ["This array attrib7ute stores the number of each unique color in the graph."]}], "indent": 0, "text": ["Worksets Length Attr."], "role": "item", "attrs": {"id": "worksets_length"}, "extent": [1910, 1933], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2087, 2261], "text": ["The greedy graph coloring algorithm usually terminates will before\n    this number of iterations, so this acts mostly as an upper bound\n    in case something goes wrong."]}], "indent": 0, "text": ["Max Iterations"], "role": "item", "attrs": {"id": "maxiterations"}, "extent": [2043, 2059], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "extent": [607, 619], "container": true, "type": "parameters_section", "id": "parameters"}], "summary": ["Assigns a unique integer attribute to non-touching components."], "type": "root", "attrs": {"version": null, "namespace": null, "internal": "graphcolor", "context": "sop", "type": "node", "icon": "SOP/graphcolor"}, "title": ["Graph Color"]}