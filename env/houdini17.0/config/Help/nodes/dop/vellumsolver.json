{"body": [{"indent": 0, "text": ["Vellum Solver"], "type": "title", "extent": [84, 102], "level": 0}, {"indent": 0, "type": "summary", "extent": [102, 147], "text": ["Sets and configures a Vellum solver."]}, {"indent": 0, "type": "para", "extent": [147, 285], "text": ["Vellum Solvers are a type of POP Solver that include support for internal triangle and edge collisions and explicit constraint geometry."]}, {"indent": 0, "type": "para", "extent": [285, 833], "text": ["The Geometry data stores the dynamic attributes of the simulation as point attributes.  It also stores the collision geometry, so the triangle or poly-line mesh is used to detect and resolve collisions. However, the way the points are held together is determined by the separate Constraint Geometry data.  The Constraint Geometry data should have a one-to-one point correspondence with the Geometry.  Polygons in the Constraint Geometry are interpreted as rules to maintain certain properties of the source points, such as distance or bend angle."]}, {"indent": 0, "type": "para", "extent": [833, 919], "text": ["POP Forces can be wired into the solver-inputs to adjust the behavior of the object."]}, {"indent": 0, "type": "para", "extent": [919, 1111], "text": ["Usually an empty Vellum object is created using a ", {"text": ["Vellum Object DOP"], "fullpath": "/nodes/dop/vellumobject", "scheme": "Node", "type": "link", "value": "/nodes/dop/vellumobject"}, " and patches of geometry are added to this object with ", {"text": ["Vellum Source DOPs"], "fullpath": "/nodes/dop/vellumsource", "scheme": "Node", "type": "link", "value": "/nodes/dop/vellumsource"}, "."]}, {"body": [{"body": [{"indent": 0, "type": "para", "extent": [1137, 1285], "text": [{"body": [{"indent": 4, "type": "para", "extent": [2913, 2970], "text": ["Controls if any collision detection is done at all."]}], "indent": 0, "text": ["Enable Collisions"], "role": "item", "attrs": {"id": "enablecollisions"}, "extent": [2866, 2886], "type": "parameters_item"}, "\n", {"body": [{"type": "para", "indent": 4, "extent": [3014, 3061], "text": ["Controls if self collisions are detected."]}], "indent": 0, "text": ["Self Collisions"], "role": "item", "attrs": {"id": "doselfcollisions"}, "extent": [2970, 2987], "type": "parameters_item"}, "\n", {"body": [{"type": "para", "indent": 4, "extent": [1305, 1612], "text": ["Scales the effective time of the Vellum solve.  This can be used to\n    create bullet-time like effects where the physics of the Vellum\n    solver run at a different rate than the Houdini playbar.  A\n    value of 2 will cause cloth to fall twice as fast, and 0.1\n    will slow it to a tenth the speed."]}], "indent": 0, "text": ["Timescale"], "role": "item", "attrs": {"id": "timescale"}, "extent": [1273, 1285], "type": "parameters_item"}]}, {"body": [{"indent": 0, "type": "para", "extent": [1304, 1434], "text": [{"body": [{"type": "para", "indent": 4, "extent": [1641, 1785], "text": ["Each frame will be broken into this number of substeps.  Additional\n    substeps are required for fast moving collisions or sudden forces."]}, {"type": "para", "indent": 4, "extent": [1785, 1939], "text": ["The default substeps can be very aggressive, usually if the\n    Vellum solver is too stretchy, raising substeps to 2 or 5 is\n    a good first start."]}], "indent": 0, "text": ["Substeps"], "role": "item", "attrs": {"id": "substeps"}, "extent": [1612, 1622], "type": "parameters_item"}, "\n", {"body": [{"type": "para", "indent": 4, "extent": [1978, 2266], "text": ["Within each substep, this number of passes will be taken by the\n    constraint enforcement operations.   Stiff constraints can\n    require more iterations to converge.  A good starting point\n    is the diameter of the geometry - the number of edges between\n    the farthest points."]}], "indent": 0, "text": ["Constraint Iterations"], "role": "item", "attrs": {"id": "niter"}, "extent": [1939, 1962], "type": "parameters_item"}, "\n", {"body": [{"type": "para", "indent": 4, "extent": [2309, 2847], "text": ["The default constraint iterations use a Gauss-Seidel approach that\n    is fast to converge.  However, if it doesn\u2019t fully converge due to\n    too high stiffness, or impossible configurations, it will leave the error\n    as bad looking triangles.  The smoothing iterations use a Jacobi\n    approach which is slower to converge but leaves error spread out\n    in a more attractive fashion.  The default of ten passes helps\n    smooth out error, but might need to be increased if the overall\n    ", {"text": ["Constraint Iterations"], "type": "ui"}, " is very high."]}], "indent": 0, "text": ["Smoothing Iterations"], "role": "item", "attrs": {"id": "smoothiter"}, "extent": [2266, 2288], "type": "parameters_item"}]}], "indent": 0, "level": 3, "text": ["Iterations"], "extent": [1285, 1304], "container": true, "type": "h", "id": null}, {"body": [{"indent": 0, "type": "para", "extent": [1453, 1649], "text": [{"body": [{"type": "para", "indent": 4, "extent": [3328, 3771], "text": ["Number of collision detection passes to perform.  These are interleaved\n    between the constraint iterations.  Since collision is expensive, it is\n    best to minimize this.   But frequent interleaving helps avoid tent-poling\n    effects where a small collider is fighting with the no-stretch constraints.\n    In practice we find 10 to be correct for most situations, and substeps\n    often being a better solution to increase quality."]}], "indent": 0, "text": ["Collision Passes"], "role": "item", "attrs": {"id": "collisionsiter"}, "extent": [3285, 3303], "type": "parameters_item"}, "\n", {"body": [{"type": "para", "indent": 4, "extent": [3822, 4309], "text": ["After all constraints are performed, a final round of collision detection\n    is done.   Collisions are often the most noticeable failure mode, and it\n    is ideal if the next frame can start with non-intersecting geometry.\n    Thus a final cleanup pass can achieve these requirements.   We have\n    found that \"number of stacked layers + 2\" is a good estimate for this\n    number.   This allows the effect of the underlying collider to ripple\n    through the stacked layers fully."]}], "indent": 0, "text": ["Post Collision Passes"], "role": "item", "attrs": {"id": "postcollisioniter"}, "extent": [3771, 3794], "type": "parameters_item"}, "\n", {"body": [{"type": "para", "indent": 4, "extent": [4348, 4631], "text": ["In any collision pass, any colliding pair may not be fully resolved.   This\n    number of additional collider-pair passes will be run until they are\n    resolved.  Since these are only performed on active colliders (and no new\n    collision search is done) this is very cheap."]}], "indent": 0, "text": ["Polish Passes"], "role": "item", "attrs": {"id": "resolveallmax"}, "extent": [4309, 4324], "type": "parameters_item"}, "\n", {"body": [{"type": "para", "indent": 4, "extent": [4665, 5210], "text": ["The ", {"text": ["layer"], "type": "code"}, " integer point attribute is used to flag point as belonging\n    to different layers of cloth.  Higher numbers refer to higher layers.\n    Layer Shock will make lower layers this many times heavier during collision\n    evaluation, ensuring the higher layers will move out of their way.  The\n    rest of the dynamics are unaffected by this, and the difference is fixed\n    regardless of the number of layers between the two.  This can be thought\n    of as a way to dial between one-way layering of sims and fully coupled\n    sims."]}], "indent": 0, "text": ["Layer Shock"], "role": "item", "attrs": {"id": "layershock"}, "extent": [4631, 4644], "type": "parameters_item"}]}], "indent": 0, "level": 3, "text": ["Collisions"], "extent": [1434, 1453], "container": true, "type": "h", "id": null}, {"body": [{"indent": 0, "type": "para", "extent": [1666, 1857], "text": [{"body": [{"type": "para", "indent": 4, "extent": [5808, 6092], "text": ["A threshold at which to apply full friction.  When the ratio of the tangential velocity and the normal impulse is less than this, the tangential velocity will be fully eliminated through friction.  This is roughly tan() of the slope angle that will allow sliding under gravity."]}], "indent": 0, "text": ["Static Threshold"], "role": "item", "attrs": {"id": "static_threshold"}, "extent": [5762, 5781], "type": "parameters_item"}, "\n", {"body": [{"type": "para", "indent": 4, "extent": [6131, 6267], "text": ["If the static threshold fails, this controls what percentage the tangential velocity will be reduced in the dynamic friction case."]}], "indent": 0, "text": ["Dynamic Scale"], "role": "item", "attrs": {"id": "dynamic_scale"}, "extent": [6092, 6107], "type": "parameters_item"}, "\n", {"body": [{"type": "para", "indent": 4, "extent": [6303, 6404], "text": ["A scale factor on the amount of friction effect to apply for collisions with external geometry."]}], "indent": 0, "text": ["Enable External"], "role": "item", "attrs": {"id": "friction"}, "extent": [6267, 6284], "type": "parameters_item"}, "\n", {"body": [{"type": "para", "indent": 4, "extent": [6440, 6537], "text": ["A scale factor on the amount of friction effect to apply for collisions with self geometry."]}], "indent": 0, "text": ["Enable Self"], "role": "item", "attrs": {"id": "selffriction"}, "extent": [6404, 6417], "type": "parameters_item"}]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [1902, 2009], "text": ["A scale factor for the volume collider\u2019s static friction.  Useful to\n    create frictionless grounds."]}], "indent": 0, "text": ["Static SDF Enable"], "role": "item", "attrs": {"id": "static_sdfscale"}, "extent": [1857, 1876], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2056, 2164], "text": ["A scale factor for the volume collider\u2019s dynamic friction.  Useful to\n    create frictionless grounds."]}], "indent": 0, "text": ["Dynamic SDF Enable"], "role": "item", "attrs": {"id": "dynamic_sdfscale"}, "extent": [2009, 2029], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Friction"], "extent": [1649, 1666], "container": true, "type": "h", "id": null}], "indent": 0, "level": 2, "text": ["Common"], "extent": [1123, 1137], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"type": "para", "indent": 4, "extent": [8603, 8882], "text": ["When integrating points forward by their velocities, curved motions\n    like swinging pendulums will be mispredicted and be damped by\n    the constraint projections.   A second order predictor recovers more of\n    this curved motion and maintains more energy in the system."]}, {"type": "para", "indent": 4, "extent": [8882, 9001], "text": ["In any case, if collisions are detected the system will fall back\n    to first order to avoid excessive bouncing."]}], "indent": 0, "text": ["Integration"], "role": "item", "attrs": {"id": "integration"}, "extent": [8568, 8581], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2268, 2427], "text": ["The Vellum points will receive forces from DOP forces.  Turning this off\n    will remove this effect, and the points will only be affected by POP forces."]}], "indent": 0, "text": ["External Forces"], "role": "item", "attrs": {"id": "externalforce"}, "extent": [2227, 2244], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2456, 2572], "text": ["If no ", {"text": ["mass"], "type": "code"}, " attribute is on the incoming geometry, this will be used as the\n    default value for the points."]}, {"indent": 4, "type": "para", "extent": [2572, 2673], "text": ["Usually mass should already be set by the ", {"text": ["Vellum Constraints"], "fullpath": "/nodes/sop/vellumconstraints", "scheme": "Node", "type": "link", "value": "/nodes/sop/vellumconstraints"}, " SOP."]}], "indent": 0, "text": ["Default Mass"], "role": "item", "attrs": {"id": "mass"}, "extent": [2427, 2441], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2712, 2799], "text": ["If the incoming geometry has no ", {"text": ["pscale"], "type": "code"}, " attribute, it will be set to this value."]}, {"indent": 4, "type": "para", "extent": [2799, 2905], "text": ["Usually thickness should already be set by the ", {"text": ["Vellum Constraints"], "fullpath": "/nodes/sop/vellumconstraints", "scheme": "Node", "type": "link", "value": "/nodes/sop/vellumconstraints"}, " SOP."]}], "indent": 0, "text": ["Default Thickness"], "role": "item", "attrs": {"id": "thickness"}, "extent": [2673, 2692], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [2986, 3184], "text": ["If points fail to resolve their collisions after the post-collision passes,\n    they will be flagged as disabled, allowing them and any primitives attached\n    to them to move collision free."]}], "indent": 0, "text": ["Disable Failed Collisions"], "role": "item", "attrs": {"id": "disablefailedcollisions"}, "extent": [2924, 2952], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3231, 3454], "text": ["If a disabled point detects it is no longer in a tangled situation,\n    and is connected to non-disabled point, it will re-activate itself.  The\n    hope is that it has moved back to the correct side of the geometry."]}], "indent": 0, "text": ["Reset Collided Points"], "role": "item", "attrs": {"id": "resetcollided"}, "extent": [3184, 3207], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3506, 3644], "text": ["The ", {"text": ["overlap_self"], "type": "code"}, " and ", {"text": ["overlap_external"], "type": "code"}, " attributes will be created\n    and initialized to respect the initial setup of the solver."]}, {"indent": 4, "type": "para", "extent": [3644, 3834], "text": ["Note if the attributes are already present, they will not be\n    initialized.  If the configuration has changed due to modeling\n    operations you may need to delete those attributes."]}], "indent": 0, "text": ["Initialize Overlap Distances"], "role": "item", "attrs": {"id": "initoverlap"}, "extent": [3454, 3484], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3884, 4081], "text": ["The ", {"text": ["overlap_self"], "type": "code"}, " and ", {"text": ["overlap_external"], "type": "code"}, " will be updated to reflect\n    the current configuration.   The only decrease with this operation,\n    so to initialize set to a large initial value."]}], "indent": 0, "text": ["Update Overlap Distances"], "role": "item", "attrs": {"id": "updateoverlap"}, "extent": [3834, 3860], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4121, 4325], "text": ["The unshared faces of a tetrahedral mesh will generate collision geometry if this is set.  Sometimes one wishes to use both a triangle shell and a tetrahedral mesh, making this operation redundant."]}], "indent": 0, "text": ["Tetrahedral Open Faces"], "role": "item", "attrs": {"id": "dotet"}, "extent": [4081, 4105], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Collisions"], "extent": [2905, 2924], "container": true, "type": "h", "id": null}, {"body": [{"indent": 0, "type": "para", "extent": [4340, 4526], "text": [{"body": [{"type": "para", "indent": 4, "extent": [9038, 9232], "text": ["Various acceleration limiting options can be used to prevent the\n    simulation from being over-eager to obey non-realistic forces.   These\n    can otherwise result in large energy spikes."]}], "indent": 0, "text": ["Max Acceleration"], "role": "item", "attrs": {"id": "maxaccel"}, "extent": [9001, 9019], "type": "parameters_item"}, "\n", {"body": [{"type": "para", "indent": 4, "extent": [9306, 9604], "text": ["If ", {"text": ["Max Acceleration"], "type": "ui"}, " is exceeded for a point, assume it signals a sharp,\n    discontinuous collision where the second order prediction will be wrong\n    and add erroneous motion, often in the form of bouncing.  In this case,\n    fallback to first order integration for the affected point."]}], "indent": 0, "text": ["Fallback to First Order Integration on Collision"], "role": "item", "attrs": {"id": "accelfallback"}, "extent": [9232, 9282], "type": "parameters_item"}, "\n", {"body": [{"type": "para", "indent": 4, "extent": [9664, 9905], "text": ["Cap the amount that velocity of a particle is allowed to change as a\n    result of any of the dynamics.   This is useful to prevent some\n    instant motion being mis-identified as a massive force, and thus\n    avoid fly-away particles."]}], "indent": 0, "text": ["Limit Acceleration in Velocity Update"], "role": "item", "attrs": {"id": "limitaccel"}, "extent": [9604, 9643], "type": "parameters_item"}, "\n", {"body": [{"type": "para", "indent": 4, "extent": [9962, 10231], "text": ["During the collision resolution, if the collision correction moves a\n    particle more than the acceleration amount, cap the effect.  The hope\n    is to fail more gracefully when a part of a model snags on the cloth\n    and is pulling it in a surprising fashion."]}], "indent": 0, "text": ["Limit Displacement on Collision"], "role": "item", "attrs": {"id": "limitdisplace"}, "extent": [9905, 9938], "type": "parameters_item"}]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [4571, 4829], "text": ["How frequently welds and constraints are tested to see if they\n    have reached their breaking point.  Higher rates will give more\n    accuracy to the solve, but changes to the topology from a broken\n    constraint can slow down the solve considerably."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [4840, 4879], "text": ["Do not test for any breaking."]}], "indent": 4, "type": "dt", "extent": [4829, 4840], "text": ["Never"]}, {"body": [{"indent": 8, "type": "para", "extent": [4894, 4966], "text": ["Check only once every frame, regardless of number of substeps."]}], "indent": 4, "type": "dt", "extent": [4879, 4894], "text": ["Per Frame"]}, {"body": [{"indent": 8, "type": "para", "extent": [4983, 5013], "text": ["Check every substep."]}], "indent": 4, "type": "dt", "extent": [4966, 4983], "text": ["Per Substep"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Breaking Frequency"], "role": "item", "attrs": {"id": "breakfrequency"}, "extent": [4526, 4546], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Motion"], "extent": [4325, 4340], "container": true, "type": "h", "id": null}], "indent": 0, "level": 2, "text": ["Advanced"], "extent": [2164, 2179], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [5048, 5181], "text": ["Particles that remain near-stationary for sufficient time will be\n    put to sleep by setting their ", {"text": ["stopped"], "type": "code"}, " attribute to ", {"text": ["1"], "type": "code"}, "."]}, {"indent": 4, "type": "para", "extent": [5181, 5267], "text": ["You can use the Pinned visualization to visualize which points are\n    sleeping."]}], "indent": 0, "text": ["Enable Auto Sleep"], "role": "item", "extent": [5028, 5048], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5287, 5554], "text": ["How slowly particles need to be moving before they are eligible\n    for sleeping.  The amount of time they remain below this speed\n    is accumulated in the ", {"text": ["deactivation_time"], "type": "code"}, " attribute.  If they\n    exceed this speed, the ", {"text": ["deactivation_time"], "type": "code"}, " is reset to zero."]}], "indent": 0, "text": ["Velocity Threshold"], "role": "item", "extent": [5267, 5287], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5567, 5784], "text": ["How many seconds particles need to remain at or below the\n    velocity threshold before they are put to sleep.  See the\n    ", {"text": ["Wake Up POP"], "fullpath": "/nodes/dop/popwakeup", "scheme": "Node", "type": "link", "value": "/nodes/dop/popwakeup"}, " for methods to wake the \n    particles back up again."]}], "indent": 0, "text": ["Sleep Delay"], "role": "item", "extent": [5554, 5567], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"body": [{"indent": 0, "type": "para", "extent": [5809, 6002], "text": ["Vellum grains use a separate collision pass to deal with collisions\nbetween the grains.  These parameters control that behavior.  They\nare similar to those on ", {"text": ["POP Grains"], "fullpath": "/nodes/dop/popgrains", "scheme": "Node", "type": "link", "value": "/nodes/dop/popgrains"}]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [6044, 6429], "text": ["Potential intersection particles are any within this scaled distance\n    of the average of the two particles ", {"text": ["pscale"], "type": "code"}, " attribute.  This\n    is an overestimate because usually collisions are not updated\n    during the constraint iterations, so it needs to record not\n    just the currently colliding particles, but those that may\n    start to collide due to the earlier iterations."]}, {"indent": 4, "type": "para", "extent": [6429, 6499], "text": ["This also effects the range of the attraction force in clumping."]}], "indent": 0, "text": ["Search Scale"], "role": "item", "attrs": {"id": "grain_searchscale"}, "extent": [6002, 6016], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6542, 6764], "text": ["The maximum number of particles that will be considered when searching for potential collisions over the substep. Capping this is useful to avoid excessive computations, if too many particles are created at one spot."]}], "indent": 0, "text": ["Max Neighbors"], "role": "item", "attrs": {"id": "grain_maxneighbor"}, "extent": [6499, 6514], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6802, 7160], "text": ["A universal weight scale applied repulsion weight, attraction weight,\n    and the friction weight.   Because constraint averaging isn\u2019t used,\n    this may need to be reduced for stability, especially when high\n    attraction stiffness values are used.  A value of 1 / Max Neighbours\n    should provide stability, but at the cost of slower convergence."]}], "indent": 0, "text": ["Global Weight"], "role": "item", "attrs": {"id": "grain_weight"}, "extent": [6764, 6779], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7213, 7401], "text": ["The ", {"text": ["pscale"], "type": "code"}, " attribute is used to determine the radius of each\n    particle.  If all particles have the same radius, faster acceleration\n    structures can be used to find neighbors."]}], "indent": 0, "text": ["Assume Uniform Radius"], "role": "item", "attrs": {"id": "grain_uniformradius"}, "extent": [7160, 7183], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7445, 7572], "text": ["A weighting for how much the particle collision forces are weighted.\n    A value of zero will disable particle collision."]}], "indent": 0, "text": ["Repulsion Weight"], "role": "item", "attrs": {"id": "repulsionweight"}, "extent": [7401, 7419], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7612, 7708], "text": ["How strongly particles are kept apart.  Higher values result in\n    less bouncy repulsion."]}], "indent": 0, "text": ["Repulsion"], "role": "item", "attrs": {"id": "repulsionstiffness"}, "extent": [7572, 7583], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7754, 7893], "text": ["A weighting for how much the particles will naturally stick together\n    when close.  A value of zero will disable particle clumping."]}, {"indent": 4, "type": "para", "extent": [7893, 7949], "text": ["Scale with the ", {"text": ["attractionweight"], "type": "code"}, " point attribute."]}], "indent": 0, "text": ["Attraction Weight"], "role": "item", "attrs": {"id": "attractionweight"}, "extent": [7708, 7727], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7991, 8100], "text": ["How strongly nearby particles stick to each other.  Higher values\n    result in a less bouncy adhesion."]}], "indent": 0, "text": ["Attraction"], "role": "item", "attrs": {"id": "attractionstiffness"}, "extent": [7949, 7961], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [8141, 8350], "text": ["Artificially scales the mass of particles according to their position\n    with respect to gravity.  By making particles higher up lighter,\n    stacks of particles will converge faster and be more stable."]}], "indent": 0, "text": ["Enable Mass Shock"], "role": "item", "attrs": {"id": "domassshock"}, "extent": [8100, 8119], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [8396, 8635], "text": ["The amount of scaling to perform.  Higher numbers increase the\n    contrast between successive particles.  A value of 0 will\n    cause no ratio between particles, a value of 1 a 15% ratio\n    between two particles stacked vertically."]}, {"indent": 4, "type": "para", "extent": [8635, 8730], "text": ["Too high a number makes higher particles extremely light\n    and destabilizes the system."]}], "indent": 0, "text": ["Shock Scaling Power"], "role": "item", "attrs": {"id": "massshockpower"}, "extent": [8350, 8371], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [8766, 8831], "text": ["The up-vector used to define a gradient of particle masses."]}, {"indent": 4, "type": "para", "extent": [8831, 8923], "text": ["Should be in the direction of stacking, so usually is\n    opposite to that of gravity."]}], "indent": 0, "text": ["Shock Axis"], "role": "item", "attrs": {"id": "massshockaxis"}, "extent": [8730, 8742], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Grain Collisions"], "extent": [5784, 5809], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [8979, 9034], "text": ["Specify any desired compile flags for the kernel."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [9044, 9137], "text": ["The Apple OSX OpenCL compiler requires only a single space between kernel options!"]}], "indent": 4, "role": "item", "type": "note", "extent": [9034, 9044]}], "container": true, "role": "item_group", "type": "note_group"}], "indent": 0, "text": ["Kernel Options"], "role": "item", "attrs": {"id": "kerneloptions"}, "extent": [8938, 8955], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [9170, 9529], "text": ["When Finish Kernels is disabled, no attempt is to wait for the\n    OpenCL kernels to complete before continuing the next solver.\n    This lets them run in the background until their results\n    are actually needed.  To simplify debugging or timing, it is useful\n    to ensure kernels are finished to make sure errors are detected\n    in the right spot."]}], "indent": 0, "text": ["Finish Kernels"], "role": "item", "attrs": {"id": "finish"}, "extent": [9137, 9153], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [9568, 9873], "text": ["When loading kernels from disk the kernel is cached to avoid\n    regenerating it every solve.  Turning this on forces the re-loading\n    and recompiling of the kernel.  This is useful if #include files\n    refer to code that has changed, or the kernel file is changed\n    in an external text editor."]}, {"indent": 4, "type": "para", "extent": [9873, 9937], "text": ["It should always be disabled when prototyping is complete."]}], "indent": 0, "text": ["Recompile Kernels"], "role": "item", "attrs": {"id": "recompile"}, "extent": [9529, 9548], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["OpenCL"], "extent": [8923, 8938], "container": true, "type": "h", "id": null}], "indent": 0, "level": 2, "text": ["Sleeping"], "extent": [5013, 5028], "container": true, "type": "h", "id": null}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "extent": [1111, 1123], "container": true, "type": "parameters_section", "id": "parameters"}, {"body": [{"body": [{"indent": 4, "blevel": 6, "type": "bullet", "extent": [9946, 9976], "text": [{"text": "", "fullpath": "/nodes/dop/vellumobject", "scheme": "Node", "type": "link", "value": "/nodes/dop/vellumobject"}]}, {"indent": 4, "blevel": 6, "type": "bullet", "extent": [9976, 10006], "text": [{"text": "", "fullpath": "/nodes/dop/vellumsource", "scheme": "Node", "type": "link", "value": "/nodes/dop/vellumsource"}]}, {"indent": 4, "blevel": 6, "type": "bullet", "extent": [10006, 10042], "text": [{"text": "", "fullpath": "/nodes/dop/vellumconstraints", "scheme": "Node", "type": "link", "value": "/nodes/dop/vellumconstraints"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 1, "text": "Related", "role": "section", "extent": [9937, 9946], "container": true, "type": "related_section", "id": "related"}], "title": ["Vellum Solver"], "summary": ["Sets and configures a Vellum solver."], "attrs": {"version": null, "namespace": null, "internal": "vellumsolver", "context": "dop", "type": "node", "icon": "DOP/vellumsolver"}, "included": ["/nodes/sop/_vellum_common", "/nodes/sop/vellumsolver"], "type": "root"}