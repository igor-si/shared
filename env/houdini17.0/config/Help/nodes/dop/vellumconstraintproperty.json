{"body": [{"indent": 0, "text": ["Vellum Constraint Property"], "type": "title", "extent": [108, 139], "level": 0}, {"indent": 0, "type": "summary", "extent": [139, 215], "text": ["Modifies common Vellum Constraint properties during a Vellum solve."]}, {"indent": 0, "type": "para", "extent": [215, 833], "text": ["The Vellum Constraint Property DOP allows modification of common properties of the constraints during a Vellum solve.  In general each property corresponds to an attribute on a constraint primitive, except for ", {"text": ["Remove"], "type": "ui"}, " which is a pseudo-property that immediately deletes the constraint primitive when set.  The properties can be further modified by specifying a ", {"text": ["VEXpression"], "fullpath": "/dopparticles/vexpressions", "scheme": null, "type": "link", "value": "/dopparticles/vexpressions"}, " to perform more advanced VEX processing or geometry lookups. This DOP is the recommended way to modify existing constraints; use the ", {"text": ["Vellum Constraints"], "fullpath": "/nodes/dop/vellumconstraints", "scheme": "Node", "type": "link", "value": "/nodes/dop/vellumconstraints"}, " DOP to create new constraints."]}, {"body": [{"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [875, 989], "text": ["The stiffness of the constraint, which controls how strongly it will pull a particle back to its rest state."]}], "indent": 0, "text": ["Stiffness"], "role": "item", "extent": [863, 875], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1012, 1104], "text": ["The stiffness of the constraint when being compressed below its initial rest distance."]}], "indent": 0, "text": ["Compression Stiffness"], "role": "item", "extent": [989, 1012], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1119, 1292], "text": ["Stiff constraints tend to vibrate or jitter unacceptably.   Damping reduces this by bleeding energy when evaluating the constraint.  Values less than 1 should be used."]}], "indent": 0, "text": ["Damping Ratio"], "role": "item", "extent": [1104, 1119], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1305, 1481], "text": ["The rest distance of the constraint.  For Stretch-type constraints this should be in linear units (meters by default).  For Bend-type constraints it should be in degrees."]}], "indent": 0, "text": ["Rest Length"], "role": "item", "extent": [1292, 1305], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1500, 1650], "text": ["A scale on the original rest length when the constraint was created.  Animating this value allows shrinking constraint rest distances over time."]}], "indent": 0, "text": ["Rest Length Scale"], "role": "item", "extent": [1481, 1500], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1663, 1884], "text": ["For Pin to Target constraints, this is the world space position of the goal position for the pin.  For hair Bend constraints it is the quaternion representing the relative rotation from one hair segment to the next."]}], "indent": 0, "text": ["Rest Vector"], "role": "item", "extent": [1650, 1663], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1937, 2104], "text": ["Below this threshold the material will return to its original shape.\n    When deformed past the threshold, it will begin to creep into\n    its new configuration."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [2114, 2416], "text": ["Thresholds that are ratios of the current\n        rest length (created with the ", {"text": ["Ratio of Current Rest Length"], "type": "ui"}, " option enabled\n        on the ", {"text": ["Vellum Constraints"], "fullpath": "/nodes/sop/vellumconstraints", "scheme": "Node", "type": "link", "value": "/nodes/sop/vellumconstraints"}, " SOP) are stored\n        on the constraints as negative numbers, and should be specified the same way."]}], "indent": 4, "role": "item", "type": "note", "extent": [2104, 2114]}], "container": true, "role": "item_group", "type": "note_group"}], "indent": 0, "text": ["Plastic Threshold"], "role": "item", "attrs": {"id": "stretchplasticthreshold"}, "extent": [1884, 1903], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2459, 2556], "text": ["The speed at which the the material adopts its new rest lengths when\n    it begins to flow."]}], "indent": 0, "text": ["Plastic Rate"], "role": "item", "attrs": {"id": "stretchplasticrate"}, "extent": [2416, 2430], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2609, 2836], "text": ["Some plastic materials become stiffer after they've undergone deformation. These will have a hardening greater than 1.  Some become softer so will have hardening less than 1. This is a logarithmic multiplier on stiffness."]}], "indent": 0, "text": ["Plastic Hardening"], "role": "item", "attrs": {"id": "stretchplastichardening"}, "extent": [2556, 2575], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2878, 2956], "text": ["The amount of stress or displacement on a constraint to trigger a break."]}], "indent": 0, "text": ["Break Threshold"], "role": "item", "attrs": {"id": "breakthreshold"}, "extent": [2836, 2853], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2991, 3055], "text": ["This controls how the solver decides to break constraints."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [3065, 3108], "text": ["No automated tests are performed."]}], "indent": 4, "type": "dt", "extent": [3055, 3065], "text": ["None"]}, {"body": [{"indent": 8, "type": "para", "extent": [3128, 3183], "text": ["The stretch stress must exceed the threshold."]}], "indent": 4, "type": "dt", "extent": [3108, 3128], "text": ["Stretch Stress"]}, {"body": [{"indent": 8, "type": "para", "extent": [3200, 3252], "text": ["The bend stress must exceed the threshold."]}], "indent": 4, "type": "dt", "extent": [3183, 3200], "text": ["Bend Stress"]}, {"body": [{"indent": 8, "type": "para", "extent": [3274, 3377], "text": ["The total distance from the goal location and the current location must exceed the threshold."]}], "indent": 4, "type": "dt", "extent": [3252, 3274], "text": ["Stretch Distance"]}, {"body": [{"indent": 8, "type": "para", "extent": [3396, 3493], "text": ["The ratio between the current distance and the rest distance must exceed the threshold."]}], "indent": 4, "type": "dt", "extent": [3377, 3396], "text": ["Stretch Ratio"]}, {"body": [{"indent": 8, "type": "para", "extent": [3509, 3642], "text": ["The difference between the current angle and the rest angle must exceed the threshold.  This value is specified in degrees."]}], "indent": 4, "type": "dt", "extent": [3493, 3509], "text": ["Bend Angle"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Break Type"], "role": "item", "attrs": {"id": "breaktypeall"}, "extent": [2956, 2968], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3650, 3747], "text": ["A pseudo-property that will cause the constraint to be removed immediately when set to ", {"text": ["1"], "type": "code"}, "."]}], "indent": 0, "text": ["Remove"], "role": "item", "extent": [3642, 3650], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3755, 3994], "text": ["A property indicating that the constraint is about to be broken by the solver.  Resetting this to ", {"text": ["0"], "type": "code"}, " can be used to override\n    breaking if this node is plugged into the third input of the ", {"text": ["Vellum Solver"], "fullpath": "/nodes/dop/vellumsolver", "scheme": "Node", "type": "link", "value": "/nodes/dop/vellumsolver"}, " DOP."]}], "indent": 0, "text": ["Broken"], "role": "item", "extent": [3747, 3755], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4011, 4241], "text": ["Execute the ", {"text": ["VEXpression"], "fullpath": "/dopparticles/vexpressions", "scheme": null, "type": "link", "value": "/dopparticles/vexpressions"}, " provided to further modify the values for any properties enabled above.  The names of the properties in the VEXpression will match their parameter names, e.g. ", {"text": ["stiffness"], "type": "code"}, "."]}], "indent": 0, "text": ["Use VEXpression"], "role": "item", "extent": [3994, 4011], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Properties"], "extent": [845, 863], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [4267, 4329], "text": ["The name of the data containing the constraint geometry."]}], "indent": 0, "text": ["Geometry"], "role": "item", "extent": [4256, 4267], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4351, 4671], "text": ["For nodes with local expressions, this controls where ", {"text": ["ch()"], "type": "code"}, "\n    style expressions in VEX are evaluated with respect to.  By\n    making this ", {"text": ["."], "type": "code"}, ", you can ensure relative references work.\n    It is important to promote this if you are embedding a node inside\n    an HDA you are also exporting the local expressions."]}], "indent": 0, "text": ["Evaluation Node Path"], "role": "item", "extent": [4329, 4351], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Bindings"], "extent": [4241, 4256], "container": true, "type": "h", "id": null}, {"body": [{"indent": 0, "type": "para", "extent": [4684, 5045], "text": ["Allows binding DOP data or external SOP geometry to inputs that can be referenced in the\nVEXpression. By default the Constraint Geometry is bound to geometry input 1, while the\nVellum particle geometry is input 2.  They can  with the ", {"text": ["@OpInput1-4"], "type": "code"}, " string parameters\nwhen using VEXpressions, or numerically as 0-3 with VEX functions that take an input number."]}], "indent": 0, "level": 2, "text": ["Inputs"], "extent": [4671, 4684], "container": true, "type": "h", "id": null}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "extent": [833, 845], "container": true, "type": "parameters_section", "id": "parameters"}, {"body": [{"body": [{"indent": 4, "blevel": 6, "type": "bullet", "extent": [5054, 5102], "text": [{"text": ["Vellum Solver DOP"], "fullpath": "/nodes/dop/vellumsolver", "scheme": "Node", "type": "link", "value": "/nodes/dop/vellumsolver"}]}, {"indent": 4, "blevel": 6, "type": "bullet", "extent": [5102, 5150], "text": [{"text": ["Vellum Solver SOP"], "fullpath": "/nodes/sop/vellumsolver", "scheme": "Node", "type": "link", "value": "/nodes/sop/vellumsolver"}]}, {"indent": 4, "blevel": 6, "type": "bullet", "extent": [5150, 5208], "text": [{"text": ["Vellum Constraints DOP"], "fullpath": "/nodes/dop/vellumconstraints", "scheme": "Node", "type": "link", "value": "/nodes/dop/vellumconstraints"}]}, {"indent": 4, "blevel": 6, "type": "bullet", "extent": [5208, 5266], "text": [{"text": ["Vellum Constraints SOP"], "fullpath": "/nodes/sop/vellumconstraints", "scheme": "Node", "type": "link", "value": "/nodes/sop/vellumconstraints"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 1, "text": "Related", "role": "section", "extent": [5045, 5054], "container": true, "type": "related_section", "id": "related"}], "summary": ["Modifies common Vellum Constraint properties during a Vellum solve."], "type": "root", "attrs": {"version": null, "namespace": null, "internal": "vellumconstraintproperty", "context": "dop", "type": "node", "icon": "DOP/vellumconstraintproperty"}, "title": ["Vellum Constraint Property"]}