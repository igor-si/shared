{"body": [{"indent": 0, "text": ["Geometry Wrangle"], "type": "title", "extent": [0, 21], "level": 0}, {"indent": 0, "type": "summary", "extent": [118, 172], "text": ["Runs a VEX snippet to modify attribute values."]}, {"body": [{"indent": 0, "type": "para", "extent": [187, 302], "text": ["This is a very powerful, low-level node that lets experts who are\nfamiliar with VEX tweak attributes using code."]}, {"indent": 0, "type": "para", "extent": [302, 430], "text": ["This node corresponds to the ", {"text": ["Geometry VOP DOP"], "fullpath": "/nodes/dop/geometryvop", "scheme": "Node", "type": "link", "value": "/nodes/dop/geometryvop"}, ",\nbut uses a textual VEX snippet instead of a VOP network."]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [439, 570], "text": ["This node requires that you understand the ", {"text": ["vex language"], "fullpath": "/vex/index", "scheme": null, "type": "link", "value": "/vex/"}, ".\n    It is very easy to write incorrect code using this node."]}], "indent": 0, "role": "item", "type": "warning", "extent": [430, 439]}], "container": true, "role": "item_group", "type": "warning_group"}, {"indent": 0, "type": "para", "extent": [570, 857], "text": ["This node ", {"text": ["runs the snippet on the detail or every point/primitive/vertex"], "type": "em"}, "\n(depending on the ", {"text": ["Run Over"], "type": "ui"}, " parameter) in the input geometry.\nThe snippet can edit the input geometry by changing attributes.\nIt can access information from other geometry using attributes and VEX functions."]}, {"body": [{"indent": 0, "blevel": 2, "type": "bullet", "extent": [857, 928], "text": ["Press ", {"keys": ["MMB"], "text": null, "type": "keys"}, " on the node to see any error output from the snippet."]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [928, 1141], "text": ["You can use the VEX function ", {"text": ["ch"], "type": "code"}, " to evaluate parameters.\n  The path is relative to this node (", {"text": ["ch(\"parm\")"], "type": "code"}, " will evaluate the parameter ", {"text": ["parm"], "type": "code"}, " on this node).\n  This evaluation will be done at the current time."]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [1141, 1390], "text": ["Unlike the ", {"text": ["Attrib Create SOP"], "fullpath": "/nodes/sop/attribcreate", "scheme": "Node", "type": "link", "value": "/nodes/sop/attribcreate"}, ", this does not use local variables.\n  Further, all backtick expressions and ", {"text": ["$F"], "type": "code"}, " variables will be evaluated at frame 1,\n  not the current time.\n  Use ", {"text": ["@Frame"], "type": "code"}, ", ", {"text": ["@Time"], "type": "code"}, ", or ", {"text": ["@TimeInc"], "type": "code"}, " instead."]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 2, "text": ["Overview"], "extent": [172, 187], "container": true, "type": "h", "id": null}, {"body": [{"indent": 0, "type": "para", "extent": [1404, 1456], "text": ["This node runs the snippet in the ", {"text": ["CVEX context"], "type": "strong"}, "."]}, {"body": [{"type": "para", "indent": 0, "extent": [29, 294], "text": ["The ", {"text": ["VEX snippet"], "type": "ui"}, " parameter lets you enter a snippet of ", {"text": ["VEX code"], "fullpath": "/vex/index", "scheme": null, "type": "link", "value": "/vex/"}, " to run on the input geometry.\nSee ", {"text": ["VEX snippets"], "fullpath": "/vex/snippets", "scheme": null, "type": "link", "value": "/vex/snippets"}, " for information on special syntax in the snippet parameter.\nSee ", {"text": ["the VEX chapter"], "fullpath": "/vex/index", "scheme": null, "type": "link", "value": "/vex/"}, " for information on the VEX language."]}], "container": true, "level": 3, "text": ["Syntax"], "extent": [16, 29], "indent": 0, "type": "h", "id": null}], "indent": 0, "level": 2, "text": ["Context"], "extent": [1390, 1404], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [1524, 1722], "text": ["A subset of points in the input geometry to run the program on.\n        Leave this blank to affect all points in the input.\n        The type of group must match the ", {"text": ["Run Over"], "type": "ui"}, " parameter."]}], "indent": 0, "text": ["Group"], "role": "item", "extent": [1517, 1524], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [1732, 1885], "text": ["What class  of geometry attributes to modify.\n        No attributes will be bound, except read-only detail attributes, when set to ", {"text": ["Numbers"], "type": "ui"}, "."]}], "indent": 0, "text": ["Run Over"], "role": "item", "extent": [1722, 1732], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [1926, 2223], "text": ["Iteration count when ", {"text": ["Run Over"], "type": "ui"}, " is set to ", {"text": ["Numbers"], "type": "ui"}, ".\n        ", {"text": ["@elemnum"], "type": "code"}, " will be the iteration number from 0 (inclusive), to this number (exclusive),\n        and ", {"text": ["@numelem"], "type": "code"}, " will be this number.\n        No attributes will be bound when in this mode, except read-only detail attributes."]}], "indent": 0, "text": ["Number Count"], "role": "item", "attrs": {"id": "vex_numcount"}, "extent": [1885, 1899], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [2272, 2775], "text": ["Maximum number of iterations run at a time in any thread when ", {"text": ["Run Over"], "type": "ui"}, " is set to ", {"text": ["Numbers"], "type": "ui"}, ". If this is greater than or equal to ", {"text": ["Number Count"], "type": "ui"}, ", the VEX code will run single-threaded. If each iteration will take a very large amount of time, set this to 1. However, there is quite often a significant advantage to making this value larger, especially if each iteration will take a small amount of time, and if any work can avoid being duplicated by running multiple iterations at a time."]}], "indent": 0, "text": ["Thread Job Size"], "role": "item", "attrs": {"id": "vex_threadjobsize"}, "extent": [2223, 2240], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [2840, 2979], "text": ["Only create attributes if their names match this pattern.\n        The default pattern allows any attribute to be created."]}, {"indent": 8, "type": "para", "extent": [2979, 3079], "text": ["You can restrict the created attributes by replacing the ", {"text": ["*"], "type": "code"}, " with a list of allowed names."]}, {"indent": 8, "type": "para", "extent": [3079, 3162], "text": ["Bound attributes, such as ", {"text": ["vtxnum"], "type": "code"}, ", cannot be created and will be ignored."]}], "indent": 0, "text": ["Attributes to Create"], "role": "item", "extent": [2818, 2840], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [3182, 3402], "text": ["Automatic binding with the ", {"text": ["@"], "type": "code"}, " syntax can be convenient, but if your\n        system becomes more complex there is the risk that a typo in an ", {"text": ["@"], "type": "code"}, " binding\n        will silently just bind a non-existent attribute."]}, {"indent": 8, "type": "para", "extent": [3402, 3508], "text": ["This option forces all ", {"text": ["@"], "type": "code"}, " bindings to be explicitly declared as\n        prototypes before use."]}], "indent": 0, "text": ["Enforce Prototypes"], "role": "item", "extent": [3162, 3182], "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [29, 119], "text": ["Determines if the current solver timestep will be used to apply\n    this node.  "]}, {"type": "para", "indent": 4, "extent": [119, 338], "text": ["If set, the current timestep size will be multiplied\n    by the scale and used for the time increment for this operation.\n    Otherwise, the time scale will specify an absolute fictitious time\n    to integrate by."]}, {"type": "para", "indent": 4, "extent": [338, 487], "text": ["By disabling the link between the actual real time and the\n    microsolver time, you can perform operations in a separate,\n    fictitious, time."]}], "indent": 0, "text": ["Use Timestep"], "role": "item", "extent": [15, 29], "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [499, 723], "text": ["The timestep used for this microsolver will be scaled by this\n    amount.  This allows one to achieve non-realistic effects, such as\n    parts of the simulation operating at different speeds than other\n    parts.  "]}, {"type": "para", "indent": 4, "extent": [723, 825], "text": ["Similarly, it is useful if a solver needs to be evaluated\n    independently of the main timestep."]}], "indent": 0, "text": ["Time Scale"], "role": "item", "extent": [487, 499], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Code"], "extent": [1505, 1517], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [3571, 3631], "text": ["The list of the geometry on the object to process."]}], "indent": 0, "text": ["Geometry"], "role": "item", "extent": [3561, 3571], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [3653, 3951], "text": ["VEX functions like ", {"text": ["ch()"], "type": "code"}, " usually evaluate with respect to this node.\n        Providing a path here can override where the path search starts\n        from.  This is useful for embedding in a digital asset where you\n        would like the top level digital asset to be the search root."]}], "indent": 0, "text": ["Evaluation Node Path"], "role": "item", "extent": [3631, 3653], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [3962, 4020], "text": ["An overall scale applied to the actual timestep."]}], "indent": 0, "text": ["Timescale"], "role": "item", "extent": [3951, 3962], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [4039, 4418], "text": ["When a VEX parameter is exported, the bound attribute will be\n        created if it doesn\u2019t exist.  This pattern can be used to override\n        the export option on the VEX shader to avoid writing to or creating\n        certain attributes.  The pattern matches the VEX parameter, not\n        the bound attribute.  The attribute will still be bound for\n        reading."]}], "indent": 0, "text": ["Export Parameters"], "role": "item", "extent": [4020, 4039], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [4436, 4547], "text": ["Will use the name of the attribute to determine which\n        attribute binds with which parameter.  "]}, {"indent": 8, "type": "para", "extent": [4547, 4776], "text": ["Integer attributes will bind to integer parameters.  Float\n        attributes will bind to float, vector, point, matrix, or matrix4\n        depending on their tuple size.  String attributes will bind to\n        strings."]}], "indent": 0, "text": ["Autobind by Name"], "role": "item", "extent": [4418, 4436], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [4807, 4869], "text": ["Manually specifies the bindings of each attribute.  "]}], "indent": 0, "text": ["Attribute Name, VEX Parameter"], "role": "item", "extent": [4776, 4807], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [4896, 5084], "text": ["Optionally binds Scalar, Vector, Matrix, or Index fields from this\n        object to the CVEX function.  They will be sampled at the current ", {"text": ["P"], "type": "code"}, "\n        location of each element."]}, {"indent": 8, "type": "para", "extent": [5084, 5171], "text": ["You can then access these with the @ syntax referring to the given Parameter."]}], "indent": 0, "text": ["Field Name, VEX Parameter"], "role": "item", "extent": [4869, 4896], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [5196, 5284], "text": ["Automatically bind any groups to the integer parameter prefixed with ", {"text": ["group_"], "type": "code"}, "."]}], "indent": 0, "text": ["Autobind Groups by Name"], "role": "item", "extent": [5171, 5196], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [5311, 5367], "text": ["Manually specifies the bindings of each group."]}], "indent": 0, "text": ["Group Name, VEX Parameter"], "role": "item", "extent": [5284, 5311], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [5396, 5668], "text": ["If points are being run over, and the ", {"text": ["P"], "type": "code"}, " attribute is written to,\n        but the ", {"text": ["N"], "type": "code"}, " attribute is not written to, any incoming normals will\n        become out of date.  When this option is set, vertex and point\n        normals will be updated when this occurs."]}], "indent": 0, "text": ["Update Normals If Displaced"], "role": "item", "extent": [5367, 5396], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Data Bindings"], "extent": [3541, 3561], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [5700, 5774], "text": ["These control the four virtual inputs accessible inside of VOPs."]}, {"indent": 8, "type": "para", "extent": [5774, 5921], "text": ["They can be accessed with the OpInput1-4 wires from the VOP, or with\n        the ", {"text": ["@OpInput1-4"], "type": "code"}, " string parameters when using VEXpressions."]}, {"indent": 8, "type": "para", "extent": [5921, 6029], "text": ["They can also be accessed numerically as 0-3 with VEX functions\n        that take an input number."]}, {"body": [{"body": [{"indent": 12, "type": "para", "extent": [6043, 6091], "text": ["No geometry is wired to this input."]}], "indent": 8, "type": "dt", "extent": [6029, 6043], "text": ["None"]}, {"body": [{"indent": 12, "type": "para", "extent": [6104, 6221], "text": ["The SOP geometry will be cooked prior to running the VEX and\n            the result wired to this input."]}], "indent": 8, "type": "dt", "extent": [6091, 6104], "text": ["SOP"]}, {"body": [{"indent": 12, "type": "para", "extent": [6239, 6489], "text": ["Data in the current simulation to reference.  Specified as\n            an object/data, for example, ", {"text": ["pyro1/vel"], "type": "code"}, " to refer to the velocity\n            field of the ", {"text": ["pyro1"], "type": "code"}, " object (which will show up as three volume\n            primitives)."]}], "indent": 8, "type": "dt", "extent": [6221, 6239], "text": ["DOP Data"]}, {"body": [{"indent": 12, "type": "para", "extent": [6505, 6734], "text": ["Referring to the geometry currently being processed is\n            special as you have to ensure a copy is made so the VEX\n            functions can refer to its original form.  This handles\n            that for you."]}], "indent": 8, "type": "dt", "extent": [6489, 6505], "text": ["Myself"]}, {"body": [{"indent": 12, "type": "para", "extent": [6764, 6842], "text": ["These refer to the SOPs wired into the parent DOP Network itself."]}], "indent": 8, "type": "dt", "extent": [6734, 6764], "text": ["Nth Context Geometry"]}, {"body": [{"indent": 12, "type": "para", "extent": [6882, 7070], "text": ["Refers the currently processed geometry.  Does not make a copy\n            so it is up to the user to ensure no reads are made from\n            any attributes that are bound."]}], "indent": 8, "type": "dt", "extent": [6842, 6882], "text": ["Myself (No Reads from Outputs)"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Input 1, 2, 3, 4"], "role": "item", "extent": [5681, 5700], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [7080, 7114], "text": ["Path to a SOP to wire in."]}], "indent": 0, "text": ["SOP Path"], "role": "item", "extent": [7070, 7080], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [7124, 7188], "text": ["Name of a piece of DOP data on THIS object to wire in."]}], "indent": 0, "text": ["DOP Data"], "role": "item", "extent": [7114, 7124], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Inputs"], "extent": [5668, 5681], "container": true, "type": "h", "id": null}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "extent": [1493, 1505], "container": true, "type": "parameters_section", "id": "parameters"}, {"body": [{"body": [{"indent": 0, "blevel": 2, "type": "bullet", "extent": [7197, 7223], "text": [{"text": "", "fullpath": "/nodes/dop/geometryvop", "scheme": "Node", "type": "link", "value": "/nodes/dop/geometryvop"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [7223, 7248], "text": [{"text": "", "fullpath": "/nodes/dop/gasfieldvop", "scheme": "Node", "type": "link", "value": "/nodes/dop/gasfieldvop"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [7248, 7277], "text": [{"text": "", "fullpath": "/nodes/dop/gasfieldwrangle", "scheme": "Node", "type": "link", "value": "/nodes/dop/gasfieldwrangle"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 1, "text": "Related", "role": "section", "extent": [7188, 7197], "container": true, "type": "related_section", "id": "related"}], "title": ["Geometry Wrangle"], "summary": ["Runs a VEX snippet to modify attribute values."], "attrs": {"version": null, "tags": "volumes", "namespace": null, "internal": "geoemtrywrangle", "context": "dop", "type": "node", "icon": "DOP/geoemtrywrangle"}, "included": ["/nodes/dop/standard_gas_timestep", "/nodes/sop/wrangle_syntax"], "type": "root"}