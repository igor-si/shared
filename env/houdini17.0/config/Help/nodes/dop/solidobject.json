{"body": [{"indent": 0, "text": ["FEM Solid Object"], "type": "title", "extent": [0, 21], "level": 0}, {"indent": 0, "type": "summary", "extent": [109, 161], "text": ["Creates a simulated FEM solid from geometry."]}, {"body": [{"indent": 0, "type": "para", "extent": [176, 409], "text": ["The Solid Object DOP creates a Solid Object inside the DOP simulation. It creates a new object and attaches the subdata required for it to be a properly conforming Solid Object. Solid Objects can be simulated using the FEM Solver."]}, {"indent": 0, "type": "para", "extent": [409, 733], "text": ["Solid objects are different than rigid bodies. Solid objects are flexible, which makes it possible for them to deform, and can be used to simulate materials such as flesh, wood, and concrete. Solid objects are also able to break dynamically during a simulation, based on the deformation that happens during the simulation."]}, {"indent": 0, "type": "para", "extent": [733, 931], "text": ["You can use a tetrahedral mesh in SOPs to create your solid object. Your solid geometry should satisfy ", {"text": ["guidelines"], "fullpath": "/finiteelements/geometry", "scheme": null, "type": "link", "value": "/finiteelements/geometry"}, " that ensure a fast-running and good looking simulation."]}, {"indent": 0, "type": "para", "extent": [931, 1010], "text": ["See ", {"text": ["the section on solid simulation"], "fullpath": "/finiteelements/index", "scheme": null, "type": "link", "value": "/finiteelements/"}, " for more information."]}], "indent": 0, "level": 2, "text": ["Overview"], "extent": [161, 176], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"body": [{"indent": 4, "blevel": 6, "type": "ord", "extent": [1059, 1116], "text": ["Select the geometry to convert to an organic mass."]}, {"indent": 4, "blevel": 6, "type": "ord", "extent": [1116, 1197], "text": ["On the ", {"text": ["Solid"], "type": "ui"}, " tab, click the ", {"text": "", "fullpath": "/nodes/dop/DOP/solidobject", "scheme": "Icon", "type": "link", "value": "DOP/solidobject"}, " Solid Object tool."]}], "container": true, "type": "ord_group"}], "indent": 0, "text": [" Create a hard solid object"], "role": "item", "extent": [1023, 1059], "type": "task"}, {"body": [{"body": [{"indent": 4, "blevel": 6, "type": "ord", "extent": [1235, 1292], "text": ["Select the geometry to convert to an organic mass."]}, {"indent": 4, "blevel": 6, "type": "ord", "extent": [1292, 1369], "text": ["On the ", {"text": ["Solid"], "type": "ui"}, " tab, click the ", {"text": "", "fullpath": "/nodes/dop/SHELF/squid", "scheme": "Icon", "type": "link", "value": "SHELF/squid"}, " Organic Mass tool."]}], "container": true, "type": "ord_group"}], "indent": 0, "text": [" Create a squishy solid object"], "role": "item", "extent": [1197, 1235], "type": "task"}], "container": true, "role": "item_group", "type": "task_group"}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [1375, 1491], "text": ["Once you convert geometry to a solid object, you can only transform, rotate, and scale it at the first frame."]}], "indent": 0, "role": "item", "type": "note", "extent": [1369, 1375]}], "container": true, "role": "item_group", "type": "note_group"}], "indent": 0, "level": 2, "text": ["How to"], "extent": [1010, 1023], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [62, 137], "text": ["This is a multiplier for all the internal stiffnesses of this object."]}], "indent": 0, "text": ["Stiffness Multiplier"], "role": "item", "attrs": {"id": "stiffness"}, "extent": [16, 38], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [179, 238], "text": ["This controls how quickly the object stops deforming."]}], "indent": 0, "text": ["Damping Ratio"], "role": "item", "attrs": {"id": "dampingratio"}, "extent": [137, 152], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [278, 323], "text": ["This is the amount of mass per volume."]}], "indent": 0, "text": ["Mass Density"], "role": "item", "attrs": {"id": "massdensity"}, "extent": [238, 252], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [58, 135], "text": ["This determines how strongly the object resists local changes in shape."]}], "indent": 0, "text": ["Shape Stiffness"], "role": "item", "attrs": {"id": "shapestiffness"}, "extent": [16, 33], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [179, 256], "text": ["This determines how strongly the object resists local changes in volume."]}], "indent": 0, "text": ["Volume Stiffness"], "role": "item", "attrs": {"id": "volumestiffness"}, "extent": [135, 153], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1598, 1662], "text": ["This controls the strength of friction forces at contacts"]}], "indent": 0, "text": ["Friction"], "role": "item", "extent": [1588, 1598], "type": "parameters_item"}], "container": true, "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Model"], "extent": [1503, 1516], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [56, 140], "text": ["The path to the SOP node with the initial connectivity, position and velocity."]}], "indent": 0, "text": ["Initial State"], "role": "item", "attrs": {"channels": "/soppath"}, "extent": [16, 31], "type": "parameters_item"}], "container": true, "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Initial"], "extent": [1680, 1698], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [66, 125], "text": ["The path to the SOP node that defines the rest shape."]}], "indent": 0, "text": ["Rest Shape"], "role": "item", "attrs": {"channels": "/restgeometrypath"}, "extent": [16, 28], "type": "parameters_item"}], "container": true, "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Rest"], "extent": [1736, 1749], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [76, 132], "text": ["The path to the SOP node with target deformation."]}], "indent": 0, "text": ["Target Deformation"], "role": "item", "attrs": {"channels": "/targetgeometrypath"}, "extent": [16, 36], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [185, 295], "text": ["Strength density of the distributed soft-constraint force field that tries to match the target position."]}], "indent": 0, "text": ["Target Strength"], "role": "item", "attrs": {"channels": "/targetstrength"}, "extent": [132, 149], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [346, 456], "text": ["Damping density of the distributed soft-constraint force field that tries to match the target velocity."]}], "indent": 0, "text": ["Target Damping"], "role": "item", "attrs": {"channels": "/targetdamping"}, "extent": [295, 311], "type": "parameters_item"}], "container": true, "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Target"], "extent": [1784, 1799], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [51, 99], "text": ["Turns on/off the use of embedded geometry."]}], "indent": 0, "text": ["Enable Embedding"], "role": "item", "attrs": {"channels": "/enableembedding"}, "extent": [0, 18], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [152, 244], "text": ["This geometry is embedded into and deformed along with the simulated tetrahedral mesh."]}], "indent": 0, "text": ["Embedded Geometry"], "role": "item", "attrs": {"channels": "/embeddedgeometry"}, "extent": [99, 118], "type": "parameters_item"}], "container": true, "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Embedding"], "extent": [1836, 1854], "container": true, "type": "h", "id": null}], "indent": 0, "level": 2, "text": ["Deformation"], "extent": [1662, 1680], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [67, 772], "text": ["If enabled, the geometry in this object will collide with all other objects. These other objects may belong to the same solver or they may be be ", {"text": ["Static Objects"], "fullpath": "/nodes/dop/staticobject", "scheme": "Node", "type": "link", "value": "/nodes/dop/staticobject"}, ", ", {"text": ["RBD Objects"], "fullpath": "/nodes/dop/rbdobject", "scheme": "Node", "type": "link", "value": "/nodes/dop/rbdobject"}, ", or the ", {"text": ["Ground Plane"], "fullpath": "/nodes/dop/groundplane", "scheme": "Node", "type": "link", "value": "/nodes/dop/groundplane"}, ". When the ", {"text": ["Collision Detection"], "type": "ui"}, " parameter on the Static Object is set to ", {"text": ["Use Volume Collisions"], "type": "ui"}, ", then the polygon vertices will be tested for collision against the signed distance field (SDF) of the Static Object. When ", {"text": ["Collision Detection"], "type": "ui"}, " is set to ", {"text": ["Use Surface Collisions"], "type": "ui"}, ", then geometry-based continuous collision detection is used. The geometry-based collisions collide points against polygons, and edges against edges."]}, {"indent": 4, "type": "para", "extent": [772, 1149], "text": ["When surface-based collisions are used, only polygons and tetrahedrons in the ", {"text": ["Static Object"], "fullpath": "/nodes/dop/staticobject", "scheme": "Node", "type": "link", "value": "/nodes/dop/staticobject"}, " are considered. Other types of primitives, for example spheres, are be ignored. The geometry of the external objects (e.g. Static Object) is treated as being one-sided; only the outsides of the polygons, determined by the winding order, oppose collisions."]}, {"indent": 4, "type": "para", "extent": [1149, 1442], "text": ["When volume-based collisions are enabled, only points will be colliding against the volumes, not the interiors of polygons and tetrahedrons. When colliding against small volumes, this may mean that you need to increase the number of points on your mesh to get accurate collision results."]}], "indent": 0, "text": ["Collide with objects"], "role": "item", "attrs": {"id": "collideindependent"}, "extent": [16, 38], "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [1516, 1927], "text": ["When enabled, this object will collide with other objects that have the same solver. These collisions are handled using continuous collision detection, based on the geometry (polygons and/or tetrahedrons). For collisions between objects on the same solver, the polygons are treated as two-sided. Both sides of the polygons collide. The surface of a tetrahedral mesh only collides on one side: the outside."]}], "indent": 0, "text": ["Collide with other objects with same solver"], "role": "item", "attrs": {"id": "collidecodependent"}, "extent": [1442, 1487], "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [1977, 2067], "text": ["If disabled, no two tetrahedrons within this object can collide with each other."]}], "indent": 0, "text": ["Collide within this object"], "role": "item", "attrs": {"id": "collideself"}, "extent": [1927, 1955], "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [2129, 2241], "text": ["If disabled, no two tetrahedrons that belong on the same connected component may collide with each other."]}], "indent": 0, "text": ["Collide within each component"], "role": "item", "attrs": {"id": "collideselfcomponent"}, "extent": [2067, 2098], "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "extent": [2310, 2577], "text": ["This option only has an effect when fracturing is enabled on the solver. If disabled, no two tetrahedrons that belong on the same fracture part may collide with each other. Fracture parts are controlled by the integer-valued ", {"text": ["fracturepart"], "type": "code"}, " primitive attribute."]}], "indent": 0, "text": ["Collide within each fracture part"], "role": "item", "attrs": {"id": "collideselffracturepart"}, "extent": [2241, 2276], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"body": [{"body": [{"body": [{"type": "para", "indent": 4, "extent": [3692, 3907], "text": ["If ", {"text": ["Non Square"], "type": "ui"}, " is chosen, the specified size is divided into the given number\n    of divisions of voxels.  However, the sides of these voxels may not be\n    equal, possibly leading to distorted simulations."]}, {"type": "para", "indent": 4, "extent": [3907, 4247], "text": ["When an axis is specified, that axis is considered authoritative\n    for determining the number of divisions.  The chosen axis' size\n    will be divided by the uniform divisions to yield the voxel\n    size.  The divisions for the other axes will then be adjusted to\n    the closest integer multiple that fits in the required size."]}, {"type": "para", "indent": 4, "extent": [4247, 4421], "text": ["Finally, the size along non-chosen axes will be changed to\n    represent uniform voxel sizes.  If the ", {"text": ["Max Axis"], "type": "ui"}, " option is chosen,\n    the maximum sized axis is used."]}, {"type": "para", "indent": 4, "extent": [4421, 4562], "text": ["When ", {"text": ["By Size"], "type": "ui"}, " is chosen, the ", {"text": ["Division Size"], "type": "ui"}, " will be used to\n    compute the number of voxels that fit in the given sized box."]}], "indent": 0, "text": ["Division Method"], "role": "item", "attrs": {"id": "sdf_uniformvoxels"}, "extent": [3647, 3664], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4789, 5100], "text": ["The resolution of the key axis on the voxel grid.  This allows you\n    to control the overall resolution with one parameter and still\n    preserve uniform voxels.  The ", {"text": ["Uniform Voxels"], "type": "ui"}, " option specifies\n    which axis should be used as the reference. It is usually safest\n    to use the maximum axis."]}], "indent": 0, "text": ["Uniform Divisions"], "role": "item", "attrs": {"id": "sdf_uniformdiv"}, "extent": [4741, 4760], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [8853, 9027], "text": ["This specifies the tolerance used for ray intersections\n    when computing the SDF. This value is multiplied by the size\n    of the geometry and is scale invariant."]}], "indent": 0, "text": ["Tolerance"], "role": "item", "attrs": {"id": "sdf_tol"}, "extent": [8820, 8831], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7492, 7738], "text": ["After the fix signs process is complete there can still be\n    inconsistent areas in the SDF.  Large blocks can become\n    stabilized and stick out of the SDF.  A second sign sweep pass\n    can be performed to try to eliminate these blocks."]}, {"indent": 4, "type": "para", "extent": [7738, 8222], "text": ["The sign sweep threshold governs how big of a jump has to\n    occur for a sign transition to be considered inconsistent.  If\n    the values of the sdf change by more than this threshold times\n    the width of the cell, it is considered an invalid sign\n    transition.  The original geometry is then ray intersected to\n    determine inside/outside and the result used to determine\n    which sign is correct.  The correct sign is then propagated\n    forward through the model."]}], "indent": 0, "text": ["Sign Sweep Threshold"], "role": "item", "attrs": {"id": "sdf_sweepalpha"}, "extent": [7441, 7463], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [8273, 8548], "text": ["The sign sweeps are repeated until no signs are flipped (ie,\n    all transitions are within the threshold) or this maximum is\n    reached.  Too low of a sign sweep threshold may prevent the\n    process from converging.  Otherwise, it tends to converge very\n    quickly."]}], "indent": 0, "text": ["Max Sign Sweep Count"], "role": "item", "attrs": {"id": "sdf_sweepcount"}, "extent": [8222, 8244], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["External"], "extent": [2216, 2233], "container": true, "type": "h", "id": null}], "indent": 0, "level": 2, "text": ["Collisions"], "extent": [1892, 1909], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [2562, 2648], "text": ["Allows fracturing for this object. The solver must also have fracturing enabled."]}], "indent": 0, "text": ["Enable Fracturing"], "role": "item", "attrs": {"channels": "enablefracturing"}, "extent": [2509, 2529], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2702, 2798], "text": ["The relative amount of stress in any direction above which dynamic fracturing will occur."]}], "indent": 0, "text": ["Fracture Threshold"], "role": "item", "attrs": {"channels": "fracturethreshold"}, "extent": [2648, 2668], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Fracturing"], "extent": [2492, 2509], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [56, 327], "text": ["The component of drag in the directions normal to the surface.  Increasing this will make the object go along with any wind that blows against it. For realistic wind interaction, the Normal Drag should be chosen larger (about 10 times larger) than the tangent drag."]}], "indent": 0, "text": ["Normal Drag"], "role": "item", "attrs": {"channels": "/normaldrag"}, "extent": [15, 28], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [370, 541], "text": ["The component of drag in the direction tangent to the surface.  Increasing\n    this will make the object go along with any wind that blows tangent to the\n    object."]}], "indent": 0, "text": ["Tangent Drag"], "role": "item", "attrs": {"channels": "/tangentdrag"}, "extent": [327, 341], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [605, 999], "text": ["The name of the external velocity fields on affectors that the object will\n    respond to. The default is ", {"text": ["vel"], "type": "code"}, ", which will make the object react to fluids\n    and smoke when the ", {"text": ["Tangent Drag"], "type": "ui"}, " and the ", {"text": ["Normal Drag"], "type": "ui"}, " have been\n    chosen sufficiently large. The ", {"text": ["Tangent Drag"], "type": "ui"}, " and ", {"text": ["Normal Drag"], "type": "ui"}, " forces\n    are computed by comparing the object\u2019s velocity with the external velocity."]}], "indent": 0, "text": ["External Velocity Field"], "role": "item", "attrs": {"channels": "/externalvelocityfield"}, "extent": [541, 566], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1065, 1382], "text": ["This offset is added to any velocity that\u2019s read from the velocity field.\n    When there\u2019s no velocity field, then the offset can be used to create a\n    wind force which has constant velocity everywhere. This wind effect is\n    more realistic and more accurate than the wind that is generated by DOP\n    Forces."]}], "indent": 0, "text": ["External Velocity Offset"], "role": "item", "attrs": {"channels": "/externalvelocityoffset"}, "extent": [999, 1025], "type": "parameters_item"}], "container": true, "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Drag"], "extent": [2798, 2809], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [61, 290], "text": ["This creates a primitive attribute 'quality' on the simulated geometry. The worst quality is 0, the best quality is 1. The better the quality of the primitives, the better the performance and stability of the solve will be."]}], "indent": 0, "text": ["Create Quality Attributes"], "role": "item", "attrs": {"id": "createqualityattributes"}, "extent": [0, 27], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [349, 566], "text": ["This toggle allow the object to generate attributes that indicate the density of kinetic energy and potential energy. In addition, an attribute that indicates the density of the rate of energy loss is generated."]}], "indent": 0, "text": ["Create Energy Attributes"], "role": "item", "attrs": {"id": "createenergyattributes"}, "extent": [290, 316], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [623, 681], "text": ["This toggle allows force attributes to be generated."]}], "indent": 0, "text": ["Create Force Attributes"], "role": "item", "attrs": {"id": "createforceattributes"}, "extent": [566, 591], "type": "parameters_item"}, {"body": [], "indent": 0, "text": ["Create Collision Attributes"], "role": "item", "attrs": {"id": "createcollisionattributes"}, "extent": [681, 710], "type": "parameters_item"}, {"body": [], "indent": 0, "text": ["Create Fracture Attributes"], "role": "item", "attrs": {"id": "createfractureattributes"}, "extent": [746, 774], "type": "parameters_item"}], "container": true, "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Attributes"], "extent": [2850, 2867], "container": true, "type": "h", "id": null}, {"body": [], "indent": 0, "level": 2, "text": ["Visualization"], "extent": [2918, 2954], "container": true, "type": "h", "id": "visualization"}, {"body": [], "indent": 0, "level": 2, "text": ["Creation"], "extent": [2954, 2971], "container": true, "type": "h", "id": null}, {"body": [], "indent": 0, "level": 2, "text": ["Attributes"], "extent": [3019, 3045], "container": true, "type": "h", "id": "attrib"}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "extent": [1491, 1503], "container": true, "type": "parameters_section", "id": "parameters"}, {"body": [{"body": [{"body": [{"type": "para", "indent": 4, "extent": [20, 107], "text": ["This value is the simulation time for which the node is being\n    evaluated. "]}, {"type": "para", "indent": 4, "extent": [107, 326], "text": ["This value may not be equal to the current Houdini time\n    represented by the variable T, depending on the settings of the ", {"text": ["DOP\n    Network"], "fullpath": "/nodes/obj/dopnet", "scheme": "Node", "type": "link", "value": "/nodes/obj/dopnet"}, " ", {"text": ["Offset Time"], "type": "ui"}, " and ", {"text": ["Time Scale"], "type": "ui"}, "\n    parameters. "]}, {"type": "para", "indent": 4, "extent": [326, 555], "text": ["This value is guaranteed to have a value of zero at the\n    start of a simulation, so when testing for the first timestep of a\n    simulation, it is best to use a test like ", {"text": ["$ST == 0"], "type": "code"}, " rather than\n    ", {"text": ["$T == 0"], "type": "code"}, " or ", {"text": ["$FF == 1"], "type": "code"}, "."]}], "type": "dt", "indent": 0, "extent": [16, 20], "text": ["ST"]}, {"body": [{"type": "para", "indent": 4, "extent": [559, 700], "text": ["This value is the simulation frame (or more accurately, the\n    simulation time step number) for which the node is being evaluated."]}, {"type": "para", "indent": 4, "extent": [700, 999], "text": ["This value may not be equal to the current Houdini frame number\n    represented by the variable F, depending on the settings of the ", {"text": ["DOP\n    Network"], "fullpath": "/nodes/obj/dopnet", "scheme": "Node", "type": "link", "value": "/nodes/obj/dopnet"}, " parameters. Instead, this value is equal to\n    the simulation time (ST) divided by the simulation timestep size\n    (TIMESTEP)."]}], "type": "dt", "indent": 0, "extent": [555, 559], "text": ["SF"]}, {"body": [{"type": "para", "indent": 4, "extent": [1009, 1181], "text": ["This value is the size of a simulation timestep. This value is\n    useful to scale values that are expressed in units per second, but\n    are applied on each timestep."]}], "type": "dt", "indent": 0, "extent": [999, 1009], "text": ["TIMESTEP"]}, {"body": [{"type": "para", "indent": 4, "extent": [1187, 1305], "text": ["This value is the inverse of the TIMESTEP value. It is the number\n    of timesteps per second of simulation time."]}], "type": "dt", "indent": 0, "extent": [1181, 1187], "text": ["SFPS"]}, {"body": [{"type": "para", "indent": 4, "extent": [1312, 1523], "text": ["This is the number of objects in the simulation. For nodes that\n    create objects such as the ", {"text": ["Empty Object"], "fullpath": "/nodes/dop/emptyobject", "scheme": "Node", "type": "link", "value": "/nodes/dop/emptyobject"}, " node,\n    this value will increase for each object that is evaluated. "]}, {"type": "para", "indent": 4, "extent": [1523, 1621], "text": ["A good way to guarantee unique object names is to use an expression\n    like ", {"text": ["object_$SNOBJ"], "type": "code"}, "."]}], "type": "dt", "indent": 0, "extent": [1305, 1312], "text": ["SNOBJ"]}, {"body": [{"type": "para", "indent": 4, "extent": [1627, 1859], "text": ["This value is the number of objects that will be evaluated by the\n    current node during this timestep. This value will often be\n    different from SNOBJ, as many nodes do not process all the objects\n    in a simulation. "]}, {"type": "para", "indent": 4, "extent": [1859, 1991], "text": ["This value may return 0 if the node does not\n    process each object sequentially (such as the ", {"text": ["Group\n    DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "type": "dt", "indent": 0, "extent": [1621, 1627], "text": ["NOBJ"]}, {"body": [{"type": "para", "indent": 4, "extent": [1996, 2322], "text": ["This value is the index of the specific object being processed by\n    the node. This value will always run from zero to NOBJ-1 in a given\n    timestep. This value does not identify the current object within the\n    simulation like OBJID or OBJNAME, just the object\u2019s position in the\n    current order of processing. "]}, {"type": "para", "indent": 4, "extent": [2322, 2616], "text": ["This value is useful for generating a\n    random number for each object, or simply splitting the objects into\n    two or more groups to be processed in different ways. This value\n    will be -1 if the node does not process objects sequentially (such\n    as the ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "type": "dt", "indent": 0, "extent": [1991, 1996], "text": ["OBJ"]}, {"body": [{"type": "para", "indent": 4, "extent": [2623, 2883], "text": ["This is the unique object identifier for the object being\n    processed. Every object is assigned an integer value that is unique\n    among all objects in the simulation for all time. Even if an object\n    is deleted, its identifier is never reused. "]}, {"type": "para", "indent": 4, "extent": [2883, 3168], "text": ["The object identifier\n    can always be used to uniquely identify a given object. This makes\n    this variable very useful in situations where each object needs to\n    be treated differently. It can be used to produce a unique random\n    number for each object, for example. "]}, {"type": "para", "indent": 4, "extent": [3168, 3406], "text": ["This value is also the best way\n    to look up information on an object using the dopfield expression\n    function. This value will be -1 if the node does not process objects\n    sequentially (such as the ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "type": "dt", "indent": 0, "extent": [2616, 2623], "text": ["OBJID"]}, {"body": [{"type": "para", "indent": 4, "extent": [3417, 3556], "text": ["This string contains a space separated list of the unique object\n    identifiers for every object being processed by the current node."]}], "type": "dt", "indent": 0, "extent": [3406, 3417], "text": ["ALLOBJIDS"]}, {"body": [{"type": "para", "indent": 4, "extent": [3569, 3687], "text": ["This string contains a space separated list of the names of every\n    object being processed by the current node."]}], "type": "dt", "indent": 0, "extent": [3556, 3569], "text": ["ALLOBJNAMES"]}, {"body": [{"type": "para", "indent": 4, "extent": [3694, 3801], "text": ["This value is the simulation time (see variable ST) at which the\n    current object was created. "]}, {"type": "para", "indent": 4, "extent": [3801, 4057], "text": ["Therefore, to check if an object was created\n    on the current timestep, the expression ", {"text": ["$ST == $OBJCT"], "type": "code"}, " should\n    always be used. This value will be zero if the node does not process\n    objects sequentially (such as the ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "type": "dt", "indent": 0, "extent": [3687, 3694], "text": ["OBJCT"]}, {"body": [{"type": "para", "indent": 4, "extent": [4064, 4172], "text": ["This value is the simulation frame (see variable SF) at which the\n    current object was created. "]}, {"type": "para", "indent": 4, "extent": [4172, 4389], "text": ["This value is equivalent to using the\n    dopsttoframe expression on the OBJCT variable. This value will be\n    zero if the node does not process objects sequentially (such as the\n    ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "type": "dt", "indent": 0, "extent": [4057, 4064], "text": ["OBJCF"]}, {"body": [{"type": "para", "indent": 4, "extent": [4398, 4486], "text": ["This is a string value containing the name of the object being\n    processed. "]}, {"type": "para", "indent": 4, "extent": [4486, 4748], "text": ["Object names are not guaranteed to be unique within a\n    simulation. However, if you name your objects carefully so that they\n    are unique, the object name can be a much easier way to identify an\n    object than the unique object identifier, OBJID. "]}, {"type": "para", "indent": 4, "extent": [4748, 5194], "text": ["The object name can\n    also be used to treat a number of similar objects (with the same\n    name) as a virtual group. If there are 20 objects named \"myobject\",\n    specifying ", {"text": ["strcmp($OBJNAME, \"myobject\") == 0"], "type": "code"}, " in the activation field\n    of a DOP will cause that DOP to operate only on those 20 objects. This\n    value will be the empty string if the node does not process objects\n    sequentially (such as the ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "type": "dt", "indent": 0, "extent": [4389, 4398], "text": ["OBJNAME"]}, {"body": [{"type": "para", "indent": 4, "extent": [5202, 5425], "text": ["This is a string value containing the full path of the current DOP\n    Network. This value is most useful in DOP subnet digital assets\n    where you want to know the path to the DOP Network that contains the\n    node."]}], "type": "dt", "indent": 0, "extent": [5194, 5202], "text": ["DOPNET"]}], "type": "dt_group", "container": true}, {"body": [{"body": [{"type": "para", "indent": 4, "extent": [5431, 5620], "text": ["Most dynamics nodes have local variables with the same names as the\n    node\u2019s parameters. For example, in a ", {"text": ["Position node"], "fullpath": "/nodes/dop/position", "scheme": "Node", "type": "link", "value": "/nodes/dop/position"}, ",\n    you could write the expression:"]}, {"lang": null, "type": "pre", "indent": 4, "extent": [5620, 5650], "text": ["\n    $tx + 0.1\n    "]}, {"type": "para", "indent": 4, "extent": [5650, 5730], "text": ["\u2026to make the object move 0.1 units along the X axis at each timestep."]}], "role": "item", "indent": 0, "extent": [5425, 5431], "type": "note"}], "role": "item_group", "container": true, "type": "note_group"}], "indent": 0, "level": 1, "text": "Locals", "role": "section", "extent": [3091, 3099], "container": true, "type": "locals_section", "id": "locals"}, {"body": [{"body": [{"indent": 0, "blevel": 2, "type": "bullet", "extent": [3137, 3172], "text": [{"text": "", "fullpath": "/nodes/dop/solidconfigureobject", "scheme": "Node", "type": "link", "value": "/nodes/dop/solidconfigureobject"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [3172, 3206], "text": [{"text": "", "fullpath": "/nodes/dop/finiteelementsolver", "scheme": "Node", "type": "link", "value": "/nodes/dop/finiteelementsolver"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 1, "text": "Related", "role": "section", "extent": [3128, 3137], "container": true, "type": "related_section", "id": "related"}], "title": ["FEM Solid Object"], "summary": ["Creates a simulated FEM solid from geometry."], "attrs": {"Version": "2.0", "namespace": null, "version": null, "context": "dop", "type": "node", "internal": "solidobject", "icon": "DOP/solidobject"}, "included": ["/nodes/dop/standard_embedding_parms", "/nodes/dop/standard_febody_parms", "/nodes/dop/standard_feinitial_parms", "/nodes/dop/standard_feoutputattributes_parms", "/nodes/dop/standard_ferest_parms", "/nodes/dop/standard_fesolid_parms", "/nodes/dop/standard_fetarget_parms", "/nodes/dop/standard_locals", "/nodes/dop/standard_rbdvolume_parms", "/nodes/dop/standard_softbodydrag_parms", "/nodes/dop/standard_solidcollision_parms"], "type": "root"}