{"body": [{"indent": 0, "text": ["Convert VDB"], "type": "title", "extent": [0, 16], "level": 0}, {"indent": 0, "type": "summary", "extent": [123, 155], "text": ["Converts sparse volumes."]}, {"indent": 0, "type": "para", "extent": [155, 218], "text": ["This node converts sparse volumes, or VDBs, into other types."]}, {"indent": 0, "type": "para", "extent": [218, 308], "text": ["It provides some extra options not available through the ", {"text": ["Convert SOP"], "fullpath": "/nodes/sop/convert", "scheme": "Node", "type": "link", "value": "/nodes/sop/convert"}, "."]}, {"indent": 0, "type": "para", "extent": [308, 363], "text": ["This also allows the conversion of volumes into VDBs."]}, {"indent": 0, "type": "para", "extent": [363, 751], "text": ["For converting to polygons, the second and third inputs can be optionally\nsupplied. The second input provides a reference polygon surface for converting\nthe volume, which is useful for converting fractured VDBs back to polygons.\nThe third provides additional VDB fields which can be used for\nmasking (which voxels to convert to polygons), and/or for specifying an\nadaptivity multiplier."]}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [771, 813], "text": ["Subset of primitives to convert."]}], "indent": 0, "text": ["Group"], "role": "item", "extent": [763, 771], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [825, 866], "text": ["What form of conversion to perform."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [878, 1101], "text": ["The VDB is converted to a dense volume.  This allows legacy tools\n        to understand the primitive.  VDBs with effective resolutions over\n        1000^3 will have difficulties being efficiently represented."]}], "indent": 4, "type": "dt", "extent": [866, 878], "text": ["Volume"]}, {"body": [{"indent": 8, "type": "para", "extent": [1110, 1139], "text": ["Convert into a VDB."]}, {"indent": 8, "type": "para", "extent": [1139, 1348], "text": ["If the input is a Volume Primitive, it is converted into\n        a VDB.  The resulting VDB will be the same class as the input,\n        so a fog volume becomes a fog VDB, and a SDF volume an SDF VDB."]}], "indent": 4, "type": "dt", "extent": [1101, 1110], "text": ["VDB"]}, {"body": [{"indent": 8, "type": "para", "extent": [1362, 1453], "text": ["The VDB is surfaced along the specified iso value.  Polygons\n        are created."]}], "indent": 4, "type": "dt", "extent": [1348, 1362], "text": ["Polygons"]}, {"body": [{"indent": 8, "type": "para", "extent": [1471, 1662], "text": ["The VDB is surfaced, but a polygon soup is created.  While polygon\n        soups do not support most editing operations, they are a more\n        compact way of storing dense meshes."]}], "indent": 4, "type": "dt", "extent": [1453, 1471], "text": ["Polygon Soup"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Convert To"], "role": "item", "extent": [813, 825], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1686, 1898], "text": ["When converting VDB to dense volumes, create multiple volume primitives per\n    VDB for unconnected regions where possible. This allows very large and\n    sparse VDBs to be converted with less memory usage."]}], "indent": 0, "text": ["Split Disjoint Volumes"], "role": "item", "extent": [1662, 1686], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1909, 2061], "text": ["If after converting the VDB, it is still a VDB, it is compared against\n    this class.  If it differs, it will be converted to the specified type."]}, {"indent": 4, "type": "para", "extent": [2061, 2151], "text": ["To change the class of the VDB without changing voxel values, use the Primitive SOP."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [2166, 2307], "text": ["The VDB is left in its original class.  When converting from\n        volumes, this will be the detected class of the source volume."]}], "indent": 4, "type": "dt", "extent": [2151, 2166], "text": ["No Change"]}, {"body": [{"indent": 8, "type": "para", "extent": [2331, 2510], "text": ["Fog VDBs will be surfaced along the iso value and then converted to\n        an SDF VDB.  This is equivalent to a Convert To Polygons followed\n        by a VDB From Mesh."]}], "indent": 4, "type": "dt", "extent": [2307, 2331], "text": ["Convert Fog to SDF"]}, {"body": [{"indent": 8, "type": "para", "extent": [2534, 2678], "text": ["SDF VDBs will be set to 1 in their interior and 0 on their\n        exterior.  The band in between will blend between these two values."]}], "indent": 4, "type": "dt", "extent": [2510, 2534], "text": ["Convert SDF to Fog"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["VDB Class"], "role": "item", "extent": [1898, 1909], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2688, 2794], "text": ["The crossing point of the VDB values that is considered\n    the surface when converting to polygons."]}], "indent": 0, "text": ["Isovalue"], "role": "item", "extent": [2678, 2688], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2808, 2933], "text": ["The crossing point of the VDB values that is considered\n    the surface when converting to level sets from fog volumes."]}], "indent": 0, "text": ["Fog Isovalue"], "role": "item", "extent": [2794, 2808], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [2950, 3182], "text": ["After building the VDB grid there may be undetected constant tiles.\n    This tolerance is used to detect constant regions and collapse them.\n    Such areas that are within the background value will also be marked\n    inactive."]}], "indent": 0, "text": ["Prune Tolerance"], "role": "item", "extent": [2933, 2950], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3208, 3434], "text": ["Tests areas of inactive background values to determine if they\n    are inside or outside of an SDF, and hence whether they should\n    have negative or positive sign. This toggle has no effect for non-SDF\n    volumes."]}, {"body": [{"body": [{"indent": 12, "type": "para", "extent": [3444, 3516], "text": ["This is ignored when converting native fog volumes to VDB."]}], "indent": 4, "role": "item", "type": "note", "extent": [3434, 3444]}], "container": true, "role": "item_group", "type": "note_group"}], "indent": 0, "text": ["Signed-Flood Fill Output"], "role": "item", "extent": [3182, 3208], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [3540, 4019], "text": ["Mark all voxels active inside an SDF, even if they match the negative background\n    value.  This option is useful if processing the resulting VDB with VEX, which\n    only runs over active voxels of a VDB.  However, disabling this option will retain only\n    the narrow active internal band of an incoming SDF if it has one, saving memory\n    and downstream processing.  This toggle has no effect for non-SDF\n    volumes, or if ", {"text": ["Signed-Flood Fill Output"], "type": "ui"}, " is disabled."]}], "indent": 0, "text": ["Activate Inside Voxels"], "role": "item", "extent": [3516, 3540], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4031, 4218], "text": ["How closely to match the surface when converting to polygons.\n    Higher adaptivities will allow more variation in polygon size,\n    using fewer polygons to express the surface."]}], "indent": 0, "text": ["Adaptivity"], "role": "item", "extent": [4019, 4031], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4242, 4381], "text": ["Compute vertex normals when converting to polygons. This uses the\n    optional second input to help eliminate seams if available."]}], "indent": 0, "text": ["Compute Vertex Normals"], "role": "item", "extent": [4218, 4242], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4402, 4548], "text": ["When converting to polygons with a second input, this is the adaptivity\n    threshold for regions that are inside the reference surface."]}], "indent": 0, "text": ["Internal Adaptivity"], "role": "item", "extent": [4381, 4402], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4577, 4813], "text": ["When converting to polygons with a second input, this transfers all\n    attributes (primitive, vertex and point) from the reference surface.\n    It will override computed vertex normals for primitives in the surface\n    group."]}], "indent": 0, "text": ["Transfer Surface Attributes"], "role": "item", "extent": [4548, 4577], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4831, 4867], "text": ["Sharpen edges and corners."]}], "indent": 0, "text": ["Sharpen Features"], "role": "item", "extent": [4813, 4831], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4883, 4927], "text": ["Controls the edge adaptivity mask."]}], "indent": 0, "text": ["Edge Tolerance"], "role": "item", "extent": [4867, 4883], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [4942, 5215], "text": ["When converting to polygons with a second input, this specifies a group\n    for all polygons that are coincident with the reference surface.\n    This group is useful for transferring attributes such as uv\n    coordinates, normals, etc. from the reference surface."]}], "indent": 0, "text": ["Surface Group"], "role": "item", "extent": [4927, 4942], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5231, 5480], "text": ["When converting to polygons with a second input, this specifies a group\n    for all polygons that are inside the reference surface.\n    These group is useful for creating projected UV coordinates, or for\n    assigning a different material."]}], "indent": 0, "text": ["Interior Group"], "role": "item", "extent": [5215, 5231], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5497, 5709], "text": ["When converting to polygons with a second input, this parameter specifies a group\n    for all polygons that are near the seam lines. This can be used to drive secondary elements such as debris and dust."]}], "indent": 0, "text": ["Seam Line Group"], "role": "item", "extent": [5480, 5497], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5722, 5933], "text": ["When converting to polygons with a second input, this parameter specifies a group\n    of the fracture seam points. This can be used to drive local pre-fracture dynamics, such as local surface buckling."]}], "indent": 0, "text": ["Seam Points"], "role": "item", "extent": [5709, 5722], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5947, 6126], "text": ["If enabled, specifies the name of the VDB field from the third input to\n    be used for masking.  The field\u2019s interior defines the region for\n    converting to polygons."]}], "indent": 0, "text": ["Surface Mask"], "role": "item", "extent": [5933, 5947], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6139, 6214], "text": ["Iso value used to offset the interior region of the surface mask."]}], "indent": 0, "text": ["Mask Offset"], "role": "item", "extent": [6126, 6139], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6235, 6311], "text": ["Causes the complement of the surface mask to be converted instead."]}], "indent": 0, "text": ["Invert Surface Mask"], "role": "item", "extent": [6214, 6235], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6329, 6504], "text": ["If enabled, specifies the name of the VDB field from the third input for controlling adaptivity. The voxel values are multiplied with the ", {"text": ["Adaptivity"], "type": "ui"}, " parameter value."]}], "indent": 0, "text": ["Adaptivity Field"], "role": "item", "extent": [6311, 6329], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "extent": [751, 763], "container": true, "type": "parameters_section", "id": "parameters"}, {"body": [{"body": [{"indent": 0, "blevel": 2, "type": "bullet", "extent": [6513, 6535], "text": [{"text": "", "fullpath": "/nodes/sop/convert", "scheme": "Node", "type": "link", "value": "/nodes/sop/convert"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [6535, 6562], "text": [{"text": "", "fullpath": "/nodes/sop/convertvolume", "scheme": "Node", "type": "link", "value": "/nodes/sop/convertvolume"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [6562, 6579], "text": [{"text": "", "fullpath": "/nodes/sop/vdb", "scheme": "Node", "type": "link", "value": "/nodes/sop/vdb"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [6579, 6610], "text": [{"text": "", "fullpath": "/nodes/sop/vdbfromparticles", "scheme": "Node", "type": "link", "value": "/nodes/sop/vdbfromparticles"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 1, "text": "Related", "role": "section", "extent": [6504, 6513], "container": true, "type": "related_section", "id": "related"}], "summary": ["Converts sparse volumes."], "type": "root", "attrs": {"version": null, "tags": "convert, tesselate, volumes", "namespace": null, "internal": "convertvdb", "context": "sop", "type": "node", "icon": "SOP/convertvdb"}, "title": ["Convert VDB"]}