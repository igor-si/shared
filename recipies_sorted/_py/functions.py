#Lambda-функции
#Lambda-функция – это безымянная функция с произвольным 
#числом аргументов и вычисляющая одно выражение. 
#Тело такой функции не может содержать более одной инструкции (или выражения).
# Данную функцию можно использовать в рамках каких-либо конвейерных 
#вычислений (например внутри filter(), map() и reduce()) 
#либо самостоятельно, в тех местах, где требуется произвести 
#какие вычисление, которые удобно “завернуть” в функцию.
 >>> (lambda x: x**2)(5)
25

#Lambda-функцию можно присвоить какой-либо переменной и в 
#дальнейшем использовать ее в качестве имени функции.
>>> sqrt = lambda x: x**0.5
>>> sqrt(25)
5.0

#Списки можно обрабатывать lambda-функциями внутри таких функций как map(),
# filter(), reduce(), о них мы ещё поговорим, а пока рассмотрим пример с map().
# Функция map принимает два аргумента, первый – это функция, 
#которая будет применена к каждому элементу списка, а второй – это список,
#который нужно обработать.
>>> l = [1, 2, 3, 4, 5, 6, 7]
>>> list(map(lambda x: x**3, l))
[1, 8, 27, 64, 125, 216, 343]